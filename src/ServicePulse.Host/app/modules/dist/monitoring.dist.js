/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 539);
/******/ })
/************************************************************************/
/******/ ({

/***/ 178:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function (window, angular, $, Rx) {\n    'use strict';\n\n    function Service(toastService, connectionsManager, notifyService) {\n\n        var notifier = notifyService();\n        var mu = connectionsManager.getMonitoringUrl();\n        var isConnected = false;\n        var isConnecting = false;\n        var connectivitySource = new Rx.Subject();\n        var shouldShowFailedMessage = true;\n\n        function reportFailedConnection() {\n\n            if (isConnected) {\n                var message = 'Could not connect to the ServiceControl Monitoring service at ' + mu + '. <a class=\"btn btn-default\" href=\"#/configuration/connections\">View connection settings</a>';\n                console.log(message);\n                if (shouldShowFailedMessage) {\n                    toastService.showError(message);\n                    shouldShowFailedMessage = false;\n                }\n            }\n            isConnected = false;\n            isConnecting = false;\n            emitChange();\n        }\n\n        function reportSuccessfulConnection() {\n            if (!isConnected) {\n                var message = 'Connection to ServiceControl Monitoring service was successful ' + mu + '.';\n                console.log(message);\n                shouldShowFailedMessage = true;\n            }\n            isConnected = true;\n            isConnecting = false;\n            emitChange();\n        }\n\n        function reportConnecting() {\n            isConnecting = true;\n            emitChange();\n        }\n\n        function emitChange() {\n            var result = {\n                isConnected: isConnected,\n                isConnecting: isConnecting\n            };\n\n            connectivitySource.onNext(result);\n\n            notifier.notify('MonitoringConnectionStatusChanged', {\n                isMonitoringConnected: isConnected,\n                isMonitoringConnecting: isConnecting\n            });\n        }\n\n        function getConnectionStatusSource() {\n            return connectivitySource;\n        }\n\n        var service = {\n            reportConnecting: reportConnecting,\n            reportFailedConnection: reportFailedConnection,\n            reportSuccessfulConnection: reportSuccessfulConnection,\n            getConnectionStatusSource: getConnectionStatusSource\n        };\n\n        return service;\n    }\n\n    Service.$inject = ['toastService', 'connectionsManager', 'notifyService'];\n\n    angular.module('services.connectivityNotifier', ['sc']).service('connectivityNotifier', Service);\n})(window, window.angular, window.jQuery, window.Rx);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL3NlcnZpY2VzL3NlcnZpY2VzLmNvbm5lY3Rpdml0eU5vdGlmaWVyLmpzP2RjZjYiXSwibmFtZXMiOlsid2luZG93IiwiYW5ndWxhciIsIiQiLCJSeCIsIlNlcnZpY2UiLCJ0b2FzdFNlcnZpY2UiLCJjb25uZWN0aW9uc01hbmFnZXIiLCJub3RpZnlTZXJ2aWNlIiwibm90aWZpZXIiLCJtdSIsImdldE1vbml0b3JpbmdVcmwiLCJpc0Nvbm5lY3RlZCIsImlzQ29ubmVjdGluZyIsImNvbm5lY3Rpdml0eVNvdXJjZSIsIlN1YmplY3QiLCJzaG91bGRTaG93RmFpbGVkTWVzc2FnZSIsInJlcG9ydEZhaWxlZENvbm5lY3Rpb24iLCJtZXNzYWdlIiwiY29uc29sZSIsImxvZyIsInNob3dFcnJvciIsImVtaXRDaGFuZ2UiLCJyZXBvcnRTdWNjZXNzZnVsQ29ubmVjdGlvbiIsInJlcG9ydENvbm5lY3RpbmciLCJyZXN1bHQiLCJvbk5leHQiLCJub3RpZnkiLCJpc01vbml0b3JpbmdDb25uZWN0ZWQiLCJpc01vbml0b3JpbmdDb25uZWN0aW5nIiwiZ2V0Q29ubmVjdGlvblN0YXR1c1NvdXJjZSIsInNlcnZpY2UiLCIkaW5qZWN0IiwibW9kdWxlIiwialF1ZXJ5Il0sIm1hcHBpbmdzIjoiOztBQUFDLFdBQVVBLE1BQVYsRUFBa0JDLE9BQWxCLEVBQTJCQyxDQUEzQixFQUE4QkMsRUFBOUIsRUFBa0M7QUFDL0I7O0FBRUEsYUFBU0MsT0FBVCxDQUFpQkMsWUFBakIsRUFBK0JDLGtCQUEvQixFQUFtREMsYUFBbkQsRUFBa0U7O0FBRTlELFlBQUlDLFdBQVdELGVBQWY7QUFDQSxZQUFJRSxLQUFLSCxtQkFBbUJJLGdCQUFuQixFQUFUO0FBQ0EsWUFBSUMsY0FBYyxLQUFsQjtBQUNBLFlBQUlDLGVBQWUsS0FBbkI7QUFDQSxZQUFJQyxxQkFBcUIsSUFBSVYsR0FBR1csT0FBUCxFQUF6QjtBQUNBLFlBQUlDLDBCQUEwQixJQUE5Qjs7QUFFQSxpQkFBU0Msc0JBQVQsR0FBa0M7O0FBRTlCLGdCQUFJTCxXQUFKLEVBQWlCO0FBQ2Isb0JBQUlNLFVBQVUsbUVBQW1FUixFQUFuRSxHQUF3RSw4RkFBdEY7QUFDQVMsd0JBQVFDLEdBQVIsQ0FBWUYsT0FBWjtBQUNBLG9CQUFJRix1QkFBSixFQUE2QjtBQUN6QlYsaUNBQWFlLFNBQWIsQ0FBdUJILE9BQXZCO0FBQ0FGLDhDQUEwQixLQUExQjtBQUNIO0FBQ0o7QUFDREosMEJBQWMsS0FBZDtBQUNBQywyQkFBZSxLQUFmO0FBQ0FTO0FBQ0g7O0FBRUQsaUJBQVNDLDBCQUFULEdBQXNDO0FBQ2xDLGdCQUFJLENBQUNYLFdBQUwsRUFBa0I7QUFDZCxvQkFBSU0sVUFBVSxvRUFBb0VSLEVBQXBFLEdBQXlFLEdBQXZGO0FBQ0FTLHdCQUFRQyxHQUFSLENBQVlGLE9BQVo7QUFDQUYsMENBQTBCLElBQTFCO0FBQ0g7QUFDREosMEJBQWMsSUFBZDtBQUNBQywyQkFBZSxLQUFmO0FBQ0FTO0FBQ0g7O0FBRUQsaUJBQVNFLGdCQUFULEdBQTRCO0FBQ3hCWCwyQkFBZSxJQUFmO0FBQ0FTO0FBQ0g7O0FBRUQsaUJBQVNBLFVBQVQsR0FBc0I7QUFDbEIsZ0JBQUlHLFNBQVM7QUFDVGIsNkJBQWFBLFdBREo7QUFFVEMsOEJBQWNBO0FBRkwsYUFBYjs7QUFLQUMsK0JBQW1CWSxNQUFuQixDQUEwQkQsTUFBMUI7O0FBRUFoQixxQkFBU2tCLE1BQVQsQ0FBZ0IsbUNBQWhCLEVBQXFEO0FBQ2pEQyx1Q0FBd0JoQixXQUR5QjtBQUVqRGlCLHdDQUF5QmhCO0FBRndCLGFBQXJEO0FBSUg7O0FBRUQsaUJBQVNpQix5QkFBVCxHQUFxQztBQUNqQyxtQkFBT2hCLGtCQUFQO0FBQ0g7O0FBRUQsWUFBSWlCLFVBQVU7QUFDVlAsOEJBQWtCQSxnQkFEUjtBQUVWUCxvQ0FBd0JBLHNCQUZkO0FBR1ZNLHdDQUE0QkEsMEJBSGxCO0FBSVZPLHVDQUEyQkE7QUFKakIsU0FBZDs7QUFRQSxlQUFPQyxPQUFQO0FBQ0g7O0FBRUQxQixZQUFRMkIsT0FBUixHQUFrQixDQUFDLGNBQUQsRUFBaUIsb0JBQWpCLEVBQXVDLGVBQXZDLENBQWxCOztBQUVBOUIsWUFBUStCLE1BQVIsQ0FBZSwrQkFBZixFQUFnRCxDQUFDLElBQUQsQ0FBaEQsRUFDS0YsT0FETCxDQUNhLHNCQURiLEVBQ3FDMUIsT0FEckM7QUFFSCxDQTVFQSxFQTRFQ0osTUE1RUQsRUE0RVNBLE9BQU9DLE9BNUVoQixFQTRFeUJELE9BQU9pQyxNQTVFaEMsRUE0RXdDakMsT0FBT0csRUE1RS9DLENBQUQiLCJmaWxlIjoiMTc4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uICh3aW5kb3csIGFuZ3VsYXIsICQsIFJ4KSB7XHJcbiAgICAndXNlIHN0cmljdCc7XHJcblxyXG4gICAgZnVuY3Rpb24gU2VydmljZSh0b2FzdFNlcnZpY2UsIGNvbm5lY3Rpb25zTWFuYWdlciwgbm90aWZ5U2VydmljZSkge1xyXG5cclxuICAgICAgICB2YXIgbm90aWZpZXIgPSBub3RpZnlTZXJ2aWNlKCk7XHJcbiAgICAgICAgdmFyIG11ID0gY29ubmVjdGlvbnNNYW5hZ2VyLmdldE1vbml0b3JpbmdVcmwoKTtcclxuICAgICAgICB2YXIgaXNDb25uZWN0ZWQgPSBmYWxzZTtcclxuICAgICAgICB2YXIgaXNDb25uZWN0aW5nID0gZmFsc2U7XHJcbiAgICAgICAgdmFyIGNvbm5lY3Rpdml0eVNvdXJjZSA9IG5ldyBSeC5TdWJqZWN0KCk7XHJcbiAgICAgICAgdmFyIHNob3VsZFNob3dGYWlsZWRNZXNzYWdlID0gdHJ1ZTtcclxuXHJcbiAgICAgICAgZnVuY3Rpb24gcmVwb3J0RmFpbGVkQ29ubmVjdGlvbigpIHtcclxuXHJcbiAgICAgICAgICAgIGlmIChpc0Nvbm5lY3RlZCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIG1lc3NhZ2UgPSAnQ291bGQgbm90IGNvbm5lY3QgdG8gdGhlIFNlcnZpY2VDb250cm9sIE1vbml0b3Jpbmcgc2VydmljZSBhdCAnICsgbXUgKyAnLiA8YSBjbGFzcz1cImJ0biBidG4tZGVmYXVsdFwiIGhyZWY9XCIjL2NvbmZpZ3VyYXRpb24vY29ubmVjdGlvbnNcIj5WaWV3IGNvbm5lY3Rpb24gc2V0dGluZ3M8L2E+JztcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKG1lc3NhZ2UpO1xyXG4gICAgICAgICAgICAgICAgaWYgKHNob3VsZFNob3dGYWlsZWRNZXNzYWdlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdG9hc3RTZXJ2aWNlLnNob3dFcnJvcihtZXNzYWdlKTtcclxuICAgICAgICAgICAgICAgICAgICBzaG91bGRTaG93RmFpbGVkTWVzc2FnZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlzQ29ubmVjdGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgIGlzQ29ubmVjdGluZyA9IGZhbHNlO1xyXG4gICAgICAgICAgICBlbWl0Q2hhbmdlKCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBmdW5jdGlvbiByZXBvcnRTdWNjZXNzZnVsQ29ubmVjdGlvbigpIHtcclxuICAgICAgICAgICAgaWYgKCFpc0Nvbm5lY3RlZCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIG1lc3NhZ2UgPSAnQ29ubmVjdGlvbiB0byBTZXJ2aWNlQ29udHJvbCBNb25pdG9yaW5nIHNlcnZpY2Ugd2FzIHN1Y2Nlc3NmdWwgJyArIG11ICsgJy4nO1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2cobWVzc2FnZSk7XHJcbiAgICAgICAgICAgICAgICBzaG91bGRTaG93RmFpbGVkTWVzc2FnZSA9IHRydWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaXNDb25uZWN0ZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICBpc0Nvbm5lY3RpbmcgPSBmYWxzZTtcclxuICAgICAgICAgICAgZW1pdENoYW5nZSgpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZnVuY3Rpb24gcmVwb3J0Q29ubmVjdGluZygpIHtcclxuICAgICAgICAgICAgaXNDb25uZWN0aW5nID0gdHJ1ZTtcclxuICAgICAgICAgICAgZW1pdENoYW5nZSgpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZnVuY3Rpb24gZW1pdENoYW5nZSgpIHtcclxuICAgICAgICAgICAgdmFyIHJlc3VsdCA9IHtcclxuICAgICAgICAgICAgICAgIGlzQ29ubmVjdGVkOiBpc0Nvbm5lY3RlZCxcclxuICAgICAgICAgICAgICAgIGlzQ29ubmVjdGluZzogaXNDb25uZWN0aW5nXHJcbiAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICBjb25uZWN0aXZpdHlTb3VyY2Uub25OZXh0KHJlc3VsdCk7XHJcblxyXG4gICAgICAgICAgICBub3RpZmllci5ub3RpZnkoJ01vbml0b3JpbmdDb25uZWN0aW9uU3RhdHVzQ2hhbmdlZCcsIHtcclxuICAgICAgICAgICAgICAgIGlzTW9uaXRvcmluZ0Nvbm5lY3RlZCA6IGlzQ29ubmVjdGVkLFxyXG4gICAgICAgICAgICAgICAgaXNNb25pdG9yaW5nQ29ubmVjdGluZyA6IGlzQ29ubmVjdGluZ1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIGdldENvbm5lY3Rpb25TdGF0dXNTb3VyY2UoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBjb25uZWN0aXZpdHlTb3VyY2U7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB2YXIgc2VydmljZSA9IHtcclxuICAgICAgICAgICAgcmVwb3J0Q29ubmVjdGluZzogcmVwb3J0Q29ubmVjdGluZyxcclxuICAgICAgICAgICAgcmVwb3J0RmFpbGVkQ29ubmVjdGlvbjogcmVwb3J0RmFpbGVkQ29ubmVjdGlvbixcclxuICAgICAgICAgICAgcmVwb3J0U3VjY2Vzc2Z1bENvbm5lY3Rpb246IHJlcG9ydFN1Y2Nlc3NmdWxDb25uZWN0aW9uLFxyXG4gICAgICAgICAgICBnZXRDb25uZWN0aW9uU3RhdHVzU291cmNlOiBnZXRDb25uZWN0aW9uU3RhdHVzU291cmNlLFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgXHJcblxyXG4gICAgICAgIHJldHVybiBzZXJ2aWNlO1xyXG4gICAgfVxyXG5cclxuICAgIFNlcnZpY2UuJGluamVjdCA9IFsndG9hc3RTZXJ2aWNlJywgJ2Nvbm5lY3Rpb25zTWFuYWdlcicsICdub3RpZnlTZXJ2aWNlJ107XHJcblxyXG4gICAgYW5ndWxhci5tb2R1bGUoJ3NlcnZpY2VzLmNvbm5lY3Rpdml0eU5vdGlmaWVyJywgWydzYyddKVxyXG4gICAgICAgIC5zZXJ2aWNlKCdjb25uZWN0aXZpdHlOb3RpZmllcicsIFNlcnZpY2UpO1xyXG59KHdpbmRvdywgd2luZG93LmFuZ3VsYXIsIHdpbmRvdy5qUXVlcnksIHdpbmRvdy5SeCkpO1xyXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL3NlcnZpY2VzL3NlcnZpY2VzLmNvbm5lY3Rpdml0eU5vdGlmaWVyLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///178\n");

/***/ }),

/***/ 179:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function (window, angular) {\n    'use strict';\n\n    angular.module('monitored_endpoints').constant('largeGraphsMinimumYAxis', {\n        'queueLength': 10,\n        'throughputRetries': 10,\n        'processingCritical': 10\n    }).constant('smallGraphsMinimumYAxis', {\n        'queueLength': 10,\n        'throughput': 10,\n        'retries': 10,\n        'processingTime': 10,\n        'criticalTime': 10\n    });\n})(window, window.angular);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL2NvbnN0YW50LmRpYWdyYW1zLmpzPzhjMjkiXSwibmFtZXMiOlsid2luZG93IiwiYW5ndWxhciIsIm1vZHVsZSIsImNvbnN0YW50Il0sIm1hcHBpbmdzIjoiOztBQUFDLFdBQVVBLE1BQVYsRUFBa0JDLE9BQWxCLEVBQTJCO0FBQ3hCOztBQUVBQSxZQUFRQyxNQUFSLENBQWUscUJBQWYsRUFDS0MsUUFETCxDQUNjLHlCQURkLEVBQ3lDO0FBQzdCLHVCQUFlLEVBRGM7QUFFN0IsNkJBQXFCLEVBRlE7QUFHN0IsOEJBQXNCO0FBSE8sS0FEekMsRUFNS0EsUUFOTCxDQU1jLHlCQU5kLEVBTXlDO0FBQ2pDLHVCQUFlLEVBRGtCO0FBRWpDLHNCQUFjLEVBRm1CO0FBR2pDLG1CQUFXLEVBSHNCO0FBSWpDLDBCQUFrQixFQUplO0FBS2pDLHdCQUFnQjtBQUxpQixLQU56QztBQWNILENBakJBLEVBaUJDSCxNQWpCRCxFQWlCU0EsT0FBT0MsT0FqQmhCLENBQUQiLCJmaWxlIjoiMTc5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uICh3aW5kb3csIGFuZ3VsYXIpIHtcclxuICAgICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgICBhbmd1bGFyLm1vZHVsZSgnbW9uaXRvcmVkX2VuZHBvaW50cycpXHJcbiAgICAgICAgLmNvbnN0YW50KCdsYXJnZUdyYXBoc01pbmltdW1ZQXhpcycsIHtcclxuICAgICAgICAgICAgICAgICdxdWV1ZUxlbmd0aCc6IDEwLFxyXG4gICAgICAgICAgICAgICAgJ3Rocm91Z2hwdXRSZXRyaWVzJzogMTAsXHJcbiAgICAgICAgICAgICAgICAncHJvY2Vzc2luZ0NyaXRpY2FsJzogMTAsXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgLmNvbnN0YW50KCdzbWFsbEdyYXBoc01pbmltdW1ZQXhpcycsIHtcclxuICAgICAgICAgICAgJ3F1ZXVlTGVuZ3RoJzogMTAsXHJcbiAgICAgICAgICAgICd0aHJvdWdocHV0JzogMTAsXHJcbiAgICAgICAgICAgICdyZXRyaWVzJzogMTAsXHJcbiAgICAgICAgICAgICdwcm9jZXNzaW5nVGltZSc6IDEwLFxyXG4gICAgICAgICAgICAnY3JpdGljYWxUaW1lJzogMTAsXHJcbiAgICAgICAgfSk7XHJcblxyXG59KHdpbmRvdywgd2luZG93LmFuZ3VsYXIpKTtcclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vYXBwL21vZHVsZXMvbW9uaXRvcmluZy9qcy9jb25zdGFudC5kaWFncmFtcy5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///179\n");

/***/ }),

/***/ 180:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function (window, angular, $) {\n    'use strict';\n\n    function controller($scope, connectivityNotifier, monitoringService, $interval, connectionsManager) {\n        $scope.isSCMonitoringConnecting = connectionsManager.getIsMonitoringEnabled();\n\n        if ($scope.isSCMonitoringConnecting) {\n            connectivityNotifier.reportConnecting();\n        }\n\n        $scope.monitoringUrl = connectionsManager.getMonitoringUrl();\n        connectivityNotifier.getConnectionStatusSource().subscribe(function (value) {\n            $scope.isSCMonitoringConnected = value.isConnected;\n            $scope.isSCMonitoringConnecting = value.isConnecting;\n        });\n\n        var lastReport = undefined;\n        var scMonitoringConnectionPing = $interval(function () {\n            monitoringService.getMonitoredEndpoints().then(function (r) {\n                if (lastReport === 'success') {\n                    return;\n                }\n\n                connectivityNotifier.reportSuccessfulConnection();\n                lastReport = 'success';\n            }, function () {\n                if (lastReport === 'failed') {\n                    return;\n                }\n\n                connectivityNotifier.reportFailedConnection();\n                lastReport = 'failed';\n            });\n        }, 10000);\n\n        // Cancel interval on page changes\n        $scope.$on('$destroy', function () {\n            if (angular.isDefined(scMonitoringConnectionPing)) {\n                $interval.cancel(scMonitoringConnectionPing);\n                scMonitoringConnectionPing = undefined;\n            }\n        });\n    }\n\n    controller.$inject = ['$scope', 'connectivityNotifier', 'monitoringService', '$interval', 'connectionsManager'];\n\n    function directive() {\n        return {\n            scope: {},\n            restrict: 'E',\n            replace: true,\n            templateUrl: 'modules/monitoring/js/directives/ui.particular.monitoringConnectivityStatus.tpl.html',\n            controller: controller,\n            link: function link(scope, element) {}\n        };\n    }\n\n    directive.$inject = [];\n\n    angular.module('ui.particular.monitoringConnectivityStatus', []).directive('monitoringConnectivityStatus', directive);\n})(window, window.angular, window.jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL2RpcmVjdGl2ZXMvdWkucGFydGljdWxhci5tb25pdG9yaW5nQ29ubmVjdGl2aXR5U3RhdHVzLmpzPzFhZGQiXSwibmFtZXMiOlsid2luZG93IiwiYW5ndWxhciIsIiQiLCJjb250cm9sbGVyIiwiJHNjb3BlIiwiY29ubmVjdGl2aXR5Tm90aWZpZXIiLCJtb25pdG9yaW5nU2VydmljZSIsIiRpbnRlcnZhbCIsImNvbm5lY3Rpb25zTWFuYWdlciIsImlzU0NNb25pdG9yaW5nQ29ubmVjdGluZyIsImdldElzTW9uaXRvcmluZ0VuYWJsZWQiLCJyZXBvcnRDb25uZWN0aW5nIiwibW9uaXRvcmluZ1VybCIsImdldE1vbml0b3JpbmdVcmwiLCJnZXRDb25uZWN0aW9uU3RhdHVzU291cmNlIiwic3Vic2NyaWJlIiwiaXNTQ01vbml0b3JpbmdDb25uZWN0ZWQiLCJ2YWx1ZSIsImlzQ29ubmVjdGVkIiwiaXNDb25uZWN0aW5nIiwibGFzdFJlcG9ydCIsInVuZGVmaW5lZCIsInNjTW9uaXRvcmluZ0Nvbm5lY3Rpb25QaW5nIiwiZ2V0TW9uaXRvcmVkRW5kcG9pbnRzIiwidGhlbiIsInJlcG9ydFN1Y2Nlc3NmdWxDb25uZWN0aW9uIiwicmVwb3J0RmFpbGVkQ29ubmVjdGlvbiIsIiRvbiIsImlzRGVmaW5lZCIsImNhbmNlbCIsIiRpbmplY3QiLCJkaXJlY3RpdmUiLCJzY29wZSIsInJlc3RyaWN0IiwicmVwbGFjZSIsInRlbXBsYXRlVXJsIiwibGluayIsImVsZW1lbnQiLCJtb2R1bGUiLCJqUXVlcnkiXSwibWFwcGluZ3MiOiI7O0FBQUMsV0FBVUEsTUFBVixFQUFrQkMsT0FBbEIsRUFBMkJDLENBQTNCLEVBQThCO0FBQzNCOztBQUVBLGFBQVNDLFVBQVQsQ0FBb0JDLE1BQXBCLEVBQTRCQyxvQkFBNUIsRUFBa0RDLGlCQUFsRCxFQUFxRUMsU0FBckUsRUFBZ0ZDLGtCQUFoRixFQUFvRztBQUNoR0osZUFBT0ssd0JBQVAsR0FBa0NELG1CQUFtQkUsc0JBQW5CLEVBQWxDOztBQUVBLFlBQUlOLE9BQU9LLHdCQUFYLEVBQXFDO0FBQ2pDSixpQ0FBcUJNLGdCQUFyQjtBQUNIOztBQUVEUCxlQUFPUSxhQUFQLEdBQXVCSixtQkFBbUJLLGdCQUFuQixFQUF2QjtBQUNBUiw2QkFBcUJTLHlCQUFyQixHQUFpREMsU0FBakQsQ0FBMkQsaUJBQVM7QUFDaEVYLG1CQUFPWSx1QkFBUCxHQUFpQ0MsTUFBTUMsV0FBdkM7QUFDQWQsbUJBQU9LLHdCQUFQLEdBQWtDUSxNQUFNRSxZQUF4QztBQUNILFNBSEQ7O0FBS0EsWUFBSUMsYUFBYUMsU0FBakI7QUFDQSxZQUFJQyw2QkFBNkJmLFVBQVUsWUFBWTtBQUNuREQsOEJBQWtCaUIscUJBQWxCLEdBQTBDQyxJQUExQyxDQUErQyxhQUFLO0FBQ2hELG9CQUFJSixlQUFlLFNBQW5CLEVBQThCO0FBQzFCO0FBQ0g7O0FBRURmLHFDQUFxQm9CLDBCQUFyQjtBQUNBTCw2QkFBYSxTQUFiO0FBQ0gsYUFQRCxFQU9HLFlBQU07QUFDTCxvQkFBSUEsZUFBZSxRQUFuQixFQUE2QjtBQUN6QjtBQUNIOztBQUVEZixxQ0FBcUJxQixzQkFBckI7QUFDQU4sNkJBQWEsUUFBYjtBQUNILGFBZEQ7QUFlSCxTQWhCZ0MsRUFnQjlCLEtBaEI4QixDQUFqQzs7QUFrQkE7QUFDQWhCLGVBQU91QixHQUFQLENBQVcsVUFBWCxFQUF1QixZQUFZO0FBQy9CLGdCQUFJMUIsUUFBUTJCLFNBQVIsQ0FBa0JOLDBCQUFsQixDQUFKLEVBQW1EO0FBQy9DZiwwQkFBVXNCLE1BQVYsQ0FBaUJQLDBCQUFqQjtBQUNBQSw2Q0FBNkJELFNBQTdCO0FBQ0g7QUFDSixTQUxEO0FBTUg7O0FBRURsQixlQUFXMkIsT0FBWCxHQUFxQixDQUFDLFFBQUQsRUFBVyxzQkFBWCxFQUFtQyxtQkFBbkMsRUFBd0QsV0FBeEQsRUFBcUUsb0JBQXJFLENBQXJCOztBQUVBLGFBQVNDLFNBQVQsR0FBcUI7QUFDakIsZUFBTztBQUNIQyxtQkFBTyxFQURKO0FBRUhDLHNCQUFVLEdBRlA7QUFHSEMscUJBQVMsSUFITjtBQUlIQyx5QkFBYSxzRkFKVjtBQUtIaEMsd0JBQVlBLFVBTFQ7QUFNSGlDLGtCQUFNLGNBQVVKLEtBQVYsRUFBaUJLLE9BQWpCLEVBQTBCLENBQUc7QUFOaEMsU0FBUDtBQVFIOztBQUVETixjQUFVRCxPQUFWLEdBQW9CLEVBQXBCOztBQUVBN0IsWUFDS3FDLE1BREwsQ0FDWSw0Q0FEWixFQUMwRCxFQUQxRCxFQUVLUCxTQUZMLENBRWUsOEJBRmYsRUFFK0NBLFNBRi9DO0FBSUgsQ0EvREEsRUErREMvQixNQS9ERCxFQStEU0EsT0FBT0MsT0EvRGhCLEVBK0R5QkQsT0FBT3VDLE1BL0RoQyxDQUFEIiwiZmlsZSI6IjE4MC5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiAod2luZG93LCBhbmd1bGFyLCAkKSB7XHJcbiAgICAndXNlIHN0cmljdCc7XHJcblxyXG4gICAgZnVuY3Rpb24gY29udHJvbGxlcigkc2NvcGUsIGNvbm5lY3Rpdml0eU5vdGlmaWVyLCBtb25pdG9yaW5nU2VydmljZSwgJGludGVydmFsLCBjb25uZWN0aW9uc01hbmFnZXIpIHtcclxuICAgICAgICAkc2NvcGUuaXNTQ01vbml0b3JpbmdDb25uZWN0aW5nID0gY29ubmVjdGlvbnNNYW5hZ2VyLmdldElzTW9uaXRvcmluZ0VuYWJsZWQoKTtcclxuICAgICAgICBcclxuICAgICAgICBpZiAoJHNjb3BlLmlzU0NNb25pdG9yaW5nQ29ubmVjdGluZykge1xyXG4gICAgICAgICAgICBjb25uZWN0aXZpdHlOb3RpZmllci5yZXBvcnRDb25uZWN0aW5nKCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAkc2NvcGUubW9uaXRvcmluZ1VybCA9IGNvbm5lY3Rpb25zTWFuYWdlci5nZXRNb25pdG9yaW5nVXJsKCk7XHJcbiAgICAgICAgY29ubmVjdGl2aXR5Tm90aWZpZXIuZ2V0Q29ubmVjdGlvblN0YXR1c1NvdXJjZSgpLnN1YnNjcmliZSh2YWx1ZSA9PiB7XHJcbiAgICAgICAgICAgICRzY29wZS5pc1NDTW9uaXRvcmluZ0Nvbm5lY3RlZCA9IHZhbHVlLmlzQ29ubmVjdGVkO1xyXG4gICAgICAgICAgICAkc2NvcGUuaXNTQ01vbml0b3JpbmdDb25uZWN0aW5nID0gdmFsdWUuaXNDb25uZWN0aW5nO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICB2YXIgbGFzdFJlcG9ydCA9IHVuZGVmaW5lZDtcclxuICAgICAgICB2YXIgc2NNb25pdG9yaW5nQ29ubmVjdGlvblBpbmcgPSAkaW50ZXJ2YWwoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBtb25pdG9yaW5nU2VydmljZS5nZXRNb25pdG9yZWRFbmRwb2ludHMoKS50aGVuKHIgPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKGxhc3RSZXBvcnQgPT09ICdzdWNjZXNzJykge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBjb25uZWN0aXZpdHlOb3RpZmllci5yZXBvcnRTdWNjZXNzZnVsQ29ubmVjdGlvbigpO1xyXG4gICAgICAgICAgICAgICAgbGFzdFJlcG9ydCA9ICdzdWNjZXNzJztcclxuICAgICAgICAgICAgfSwgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKGxhc3RSZXBvcnQgPT09ICdmYWlsZWQnKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIGNvbm5lY3Rpdml0eU5vdGlmaWVyLnJlcG9ydEZhaWxlZENvbm5lY3Rpb24oKTtcclxuICAgICAgICAgICAgICAgIGxhc3RSZXBvcnQgPSAnZmFpbGVkJztcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSwgMTAwMDApO1xyXG5cclxuICAgICAgICAvLyBDYW5jZWwgaW50ZXJ2YWwgb24gcGFnZSBjaGFuZ2VzXHJcbiAgICAgICAgJHNjb3BlLiRvbignJGRlc3Ryb3knLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGlmIChhbmd1bGFyLmlzRGVmaW5lZChzY01vbml0b3JpbmdDb25uZWN0aW9uUGluZykpIHtcclxuICAgICAgICAgICAgICAgICRpbnRlcnZhbC5jYW5jZWwoc2NNb25pdG9yaW5nQ29ubmVjdGlvblBpbmcpO1xyXG4gICAgICAgICAgICAgICAgc2NNb25pdG9yaW5nQ29ubmVjdGlvblBpbmcgPSB1bmRlZmluZWQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBjb250cm9sbGVyLiRpbmplY3QgPSBbJyRzY29wZScsICdjb25uZWN0aXZpdHlOb3RpZmllcicsICdtb25pdG9yaW5nU2VydmljZScsICckaW50ZXJ2YWwnLCAnY29ubmVjdGlvbnNNYW5hZ2VyJ107XHJcblxyXG4gICAgZnVuY3Rpb24gZGlyZWN0aXZlKCkge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHNjb3BlOiB7fSxcclxuICAgICAgICAgICAgcmVzdHJpY3Q6ICdFJyxcclxuICAgICAgICAgICAgcmVwbGFjZTogdHJ1ZSxcclxuICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICdtb2R1bGVzL21vbml0b3JpbmcvanMvZGlyZWN0aXZlcy91aS5wYXJ0aWN1bGFyLm1vbml0b3JpbmdDb25uZWN0aXZpdHlTdGF0dXMudHBsLmh0bWwnLFxyXG4gICAgICAgICAgICBjb250cm9sbGVyOiBjb250cm9sbGVyLFxyXG4gICAgICAgICAgICBsaW5rOiBmdW5jdGlvbiAoc2NvcGUsIGVsZW1lbnQpIHsgfVxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcblxyXG4gICAgZGlyZWN0aXZlLiRpbmplY3QgPSBbXTtcclxuXHJcbiAgICBhbmd1bGFyXHJcbiAgICAgICAgLm1vZHVsZSgndWkucGFydGljdWxhci5tb25pdG9yaW5nQ29ubmVjdGl2aXR5U3RhdHVzJywgW10pXHJcbiAgICAgICAgLmRpcmVjdGl2ZSgnbW9uaXRvcmluZ0Nvbm5lY3Rpdml0eVN0YXR1cycsIGRpcmVjdGl2ZSk7XHJcblxyXG59KHdpbmRvdywgd2luZG93LmFuZ3VsYXIsIHdpbmRvdy5qUXVlcnkpKTtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL2RpcmVjdGl2ZXMvdWkucGFydGljdWxhci5tb25pdG9yaW5nQ29ubmVjdGl2aXR5U3RhdHVzLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///180\n");

/***/ }),

/***/ 181:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function (window, angular, d3) {\n    'use strict';\n\n    angular.module('ui.particular.graph', []).directive('graph', function () {\n        return {\n            restrict: 'E',\n            scope: {\n                plotData: '=',\n                formatter: '&',\n                minimumYaxis: '@'\n            },\n            template: '<svg></svg>',\n            link: function link(scope, element, attrs) {\n                scope.plotData = scope.plotData || { points: [], average: 0 };\n\n                scope.$watch('plotData', function () {\n                    var svg = element.find('svg')[0];\n\n                    var width = svg.clientWidth;\n                    var height = svg.clientHeight;\n\n                    //HINT: This is workaround for Firefox\n                    if (width === 0) {\n                        var box = svg.getBoundingClientRect();\n\n                        width = box.right - box.left;\n                        height = box.bottom - box.top;\n                    }\n\n                    var verticalMargin = 6;\n                    var horizontalMargin = 2;\n\n                    var points = scope.plotData.points;\n                    if (points.length === 0) {\n                        points = new Array(10).fill(0);\n                    }\n                    var average = scope.plotData.average || 0;\n                    var minimumYaxis = !isNaN(scope.minimumYaxis) ? Number(scope.minimumYaxis) : 10;\n                    var max = points && points.length ? Math.max(average * 1.5, d3.max(points), minimumYaxis) : 1;\n                    var numberOfPoints = points && points.length ? points.length : 2;\n\n                    var scaleY = d3.scaleLinear().domain([0, max]).range([height - verticalMargin, verticalMargin]);\n\n                    var scaleX = d3.scaleLinear().domain([0, numberOfPoints - 1]).range([horizontalMargin, width - horizontalMargin]);\n\n                    var area = d3.area().x(function (d, i) {\n                        return scaleX(i);\n                    }).y(function (d, i) {\n                        return scaleY(d);\n                    }).y1(function (d) {\n                        return scaleY(0);\n                    }).curve(d3.curveLinear);\n\n                    var line = d3.line().x(function (d, i) {\n                        return scaleX(i);\n                    }).y(function (d, i) {\n                        return scaleY(d);\n                    }).curve(d3.curveLinear);\n\n                    d3.select(svg).selectAll(\"*\").remove();\n\n                    var chart = d3.select(svg).attr('width', width).attr('height', height);\n\n                    chart.append('rect').attr('width', width - 2 * horizontalMargin).attr('height', height - 2 * verticalMargin).attr('transform', 'translate(' + horizontalMargin + ',' + verticalMargin + ')').attr('fill', '#F2F6F7');\n\n                    if (points) {\n                        chart.append('path').datum(points).attr('d', area).attr('class', 'graph-data-fill');\n\n                        chart.append('path').datum(points).attr('d', line).attr('class', 'graph-data-line');\n                    }\n\n                    chart.append('path').datum(Array(numberOfPoints).fill(average)).attr('d', line).attr('class', 'graph-avg-line');\n                });\n            }\n        };\n    });\n})(window, window.angular, window.d3);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///181\n");

/***/ }),

/***/ 182:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function (window, angular) {\n    'use strict';\n\n    angular.module('ui.particular.graphdecimal', []).filter('graphdecimal', ['$filter', function ($filter) {\n        return function (input, decimals) {\n            if (input) {\n                var lastValue = input.points.length > 0 ? input.points[input.points.length - 1] : 0;\n                input.displayValue = $filter(\"metricslargenumber\")(lastValue, decimals);\n            } else {\n                input = {\n                    points: [],\n                    average: 0,\n                    displayValue: 0\n                };\n            }\n\n            return input;\n        };\n    }]);\n})(window, window.angular);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL2RpcmVjdGl2ZXMvdWkucGFydGljdWxhci5ncmFwaGRlY2ltYWwuanM/NTFkMyJdLCJuYW1lcyI6WyJ3aW5kb3ciLCJhbmd1bGFyIiwibW9kdWxlIiwiZmlsdGVyIiwiJGZpbHRlciIsImlucHV0IiwiZGVjaW1hbHMiLCJsYXN0VmFsdWUiLCJwb2ludHMiLCJsZW5ndGgiLCJkaXNwbGF5VmFsdWUiLCJhdmVyYWdlIl0sIm1hcHBpbmdzIjoiOztBQUFDLFdBQVVBLE1BQVYsRUFBa0JDLE9BQWxCLEVBQTJCO0FBQ3hCOztBQUVBQSxZQUFRQyxNQUFSLENBQWUsNEJBQWYsRUFBNkMsRUFBN0MsRUFDS0MsTUFETCxDQUNZLGNBRFosRUFDNEIsQ0FBQyxTQUFELEVBQVksVUFBVUMsT0FBVixFQUFtQjtBQUNuRCxlQUFPLFVBQVVDLEtBQVYsRUFBaUJDLFFBQWpCLEVBQTJCO0FBQzlCLGdCQUFJRCxLQUFKLEVBQVc7QUFDUCxvQkFBSUUsWUFBWUYsTUFBTUcsTUFBTixDQUFhQyxNQUFiLEdBQXNCLENBQXRCLEdBQTBCSixNQUFNRyxNQUFOLENBQWFILE1BQU1HLE1BQU4sQ0FBYUMsTUFBYixHQUFzQixDQUFuQyxDQUExQixHQUFrRSxDQUFsRjtBQUNBSixzQkFBTUssWUFBTixHQUFxQk4sUUFBUSxvQkFBUixFQUE4QkcsU0FBOUIsRUFBeUNELFFBQXpDLENBQXJCO0FBQ0gsYUFIRCxNQUdPO0FBQ0hELHdCQUFRO0FBQ0pHLDRCQUFRLEVBREo7QUFFSkcsNkJBQVMsQ0FGTDtBQUdKRCxrQ0FBYztBQUhWLGlCQUFSO0FBS0g7O0FBRUQsbUJBQU9MLEtBQVA7QUFDSCxTQWJEO0FBY0gsS0FmdUIsQ0FENUI7QUFpQkgsQ0FwQkEsRUFvQkNMLE1BcEJELEVBb0JTQSxPQUFPQyxPQXBCaEIsQ0FBRCIsImZpbGUiOiIxODIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gKHdpbmRvdywgYW5ndWxhcikge1xyXG4gICAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICAgIGFuZ3VsYXIubW9kdWxlKCd1aS5wYXJ0aWN1bGFyLmdyYXBoZGVjaW1hbCcsIFtdKVxyXG4gICAgICAgIC5maWx0ZXIoJ2dyYXBoZGVjaW1hbCcsIFsnJGZpbHRlcicsIGZ1bmN0aW9uICgkZmlsdGVyKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoaW5wdXQsIGRlY2ltYWxzKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoaW5wdXQpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgbGFzdFZhbHVlID0gaW5wdXQucG9pbnRzLmxlbmd0aCA+IDAgPyBpbnB1dC5wb2ludHNbaW5wdXQucG9pbnRzLmxlbmd0aCAtIDFdIDogMDtcclxuICAgICAgICAgICAgICAgICAgICBpbnB1dC5kaXNwbGF5VmFsdWUgPSAkZmlsdGVyKFwibWV0cmljc2xhcmdlbnVtYmVyXCIpKGxhc3RWYWx1ZSwgZGVjaW1hbHMpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBpbnB1dCA9IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcG9pbnRzOiBbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgYXZlcmFnZTogMCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheVZhbHVlOiAwXHJcbiAgICAgICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gaW5wdXQ7XHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgfV0pO1xyXG59KHdpbmRvdywgd2luZG93LmFuZ3VsYXIpKTtcclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vYXBwL21vZHVsZXMvbW9uaXRvcmluZy9qcy9kaXJlY3RpdmVzL3VpLnBhcnRpY3VsYXIuZ3JhcGhkZWNpbWFsLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///182\n");

/***/ }),

/***/ 183:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function (window, angular) {\n    'use strict';\n\n    angular.module('ui.particular.graphduration', []).filter('graphduration', ['formatter', function (formatter) {\n        return function (input) {\n            if (input) {\n                var lastValue = input.points.length > 0 ? input.points[input.points.length - 1] : 0;\n                input.displayValue = formatter.formatTime(lastValue);\n            }\n\n            return input;\n        };\n    }]);\n})(window, window.angular);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL2RpcmVjdGl2ZXMvdWkucGFydGljdWxhci5ncmFwaGR1cmF0aW9uLmpzP2Y3NWIiXSwibmFtZXMiOlsid2luZG93IiwiYW5ndWxhciIsIm1vZHVsZSIsImZpbHRlciIsImZvcm1hdHRlciIsImlucHV0IiwibGFzdFZhbHVlIiwicG9pbnRzIiwibGVuZ3RoIiwiZGlzcGxheVZhbHVlIiwiZm9ybWF0VGltZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQyxXQUFVQSxNQUFWLEVBQWtCQyxPQUFsQixFQUEyQjtBQUN4Qjs7QUFFQUEsWUFBUUMsTUFBUixDQUFlLDZCQUFmLEVBQThDLEVBQTlDLEVBQ0tDLE1BREwsQ0FDWSxlQURaLEVBQzZCLENBQUMsV0FBRCxFQUFjLFVBQVVDLFNBQVYsRUFBcUI7QUFDeEQsZUFBTyxVQUFVQyxLQUFWLEVBQWlCO0FBQ3BCLGdCQUFJQSxLQUFKLEVBQVc7QUFDUCxvQkFBSUMsWUFBWUQsTUFBTUUsTUFBTixDQUFhQyxNQUFiLEdBQXNCLENBQXRCLEdBQTBCSCxNQUFNRSxNQUFOLENBQWFGLE1BQU1FLE1BQU4sQ0FBYUMsTUFBYixHQUFzQixDQUFuQyxDQUExQixHQUFrRSxDQUFsRjtBQUNBSCxzQkFBTUksWUFBTixHQUFxQkwsVUFBVU0sVUFBVixDQUFxQkosU0FBckIsQ0FBckI7QUFDSDs7QUFFRCxtQkFBT0QsS0FBUDtBQUNILFNBUEQ7QUFRSCxLQVR3QixDQUQ3QjtBQVdILENBZEEsRUFjQ0wsTUFkRCxFQWNTQSxPQUFPQyxPQWRoQixDQUFEIiwiZmlsZSI6IjE4My5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiAod2luZG93LCBhbmd1bGFyKSB7XHJcbiAgICAndXNlIHN0cmljdCc7XHJcblxyXG4gICAgYW5ndWxhci5tb2R1bGUoJ3VpLnBhcnRpY3VsYXIuZ3JhcGhkdXJhdGlvbicsIFtdKVxyXG4gICAgICAgIC5maWx0ZXIoJ2dyYXBoZHVyYXRpb24nLCBbJ2Zvcm1hdHRlcicsIGZ1bmN0aW9uIChmb3JtYXR0ZXIpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChpbnB1dCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKGlucHV0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGxhc3RWYWx1ZSA9IGlucHV0LnBvaW50cy5sZW5ndGggPiAwID8gaW5wdXQucG9pbnRzW2lucHV0LnBvaW50cy5sZW5ndGggLSAxXSA6IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgaW5wdXQuZGlzcGxheVZhbHVlID0gZm9ybWF0dGVyLmZvcm1hdFRpbWUobGFzdFZhbHVlKTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gaW5wdXQ7XHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgfV0pO1xyXG59KHdpbmRvdywgd2luZG93LmFuZ3VsYXIpKTtcclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vYXBwL21vZHVsZXMvbW9uaXRvcmluZy9qcy9kaXJlY3RpdmVzL3VpLnBhcnRpY3VsYXIuZ3JhcGhkdXJhdGlvbi5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///183\n");

/***/ }),

/***/ 184:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function (window, angular) {\n    'use strict';\n\n    angular.module('ui.particular.metricslargenumber', []).filter('metricslargenumber', ['formatter', function (formatter) {\n        return function (input, dec) {\n            var decimals = 0;\n            if (input < 10 || input > 1000000) {\n                decimals = 2;\n            }\n            return formatter.formatLargeNumber(input, dec || decimals);\n        };\n    }]);\n})(window, window.angular);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL2RpcmVjdGl2ZXMvdWkucGFydGljdWxhci5tZXRyaWNzbGFyZ2VudW1iZXIuanM/ZWQ2MSJdLCJuYW1lcyI6WyJ3aW5kb3ciLCJhbmd1bGFyIiwibW9kdWxlIiwiZmlsdGVyIiwiZm9ybWF0dGVyIiwiaW5wdXQiLCJkZWMiLCJkZWNpbWFscyIsImZvcm1hdExhcmdlTnVtYmVyIl0sIm1hcHBpbmdzIjoiOztBQUFDLFdBQVNBLE1BQVQsRUFBaUJDLE9BQWpCLEVBQTBCO0FBQzFCOztBQUVHQSxZQUFRQyxNQUFSLENBQWUsa0NBQWYsRUFBbUQsRUFBbkQsRUFDS0MsTUFETCxDQUNZLG9CQURaLEVBQ2tDLENBQUMsV0FBRCxFQUFjLFVBQVVDLFNBQVYsRUFBcUI7QUFDN0QsZUFBTyxVQUFVQyxLQUFWLEVBQWlCQyxHQUFqQixFQUFzQjtBQUN6QixnQkFBSUMsV0FBVyxDQUFmO0FBQ0EsZ0JBQUlGLFFBQVEsRUFBUixJQUFjQSxRQUFRLE9BQTFCLEVBQW1DO0FBQy9CRSwyQkFBVyxDQUFYO0FBQ0g7QUFDRCxtQkFBT0gsVUFBVUksaUJBQVYsQ0FBNEJILEtBQTVCLEVBQW1DQyxPQUFPQyxRQUExQyxDQUFQO0FBQ0gsU0FORDtBQU9ILEtBUjZCLENBRGxDO0FBVUgsQ0FiQSxFQWFDUCxNQWJELEVBYVNBLE9BQU9DLE9BYmhCLENBQUQiLCJmaWxlIjoiMTg0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKHdpbmRvdywgYW5ndWxhcikge1xyXG5cdCd1c2Ugc3RyaWN0JztcclxuXHJcbiAgICBhbmd1bGFyLm1vZHVsZSgndWkucGFydGljdWxhci5tZXRyaWNzbGFyZ2VudW1iZXInLCBbXSlcclxuICAgICAgICAuZmlsdGVyKCdtZXRyaWNzbGFyZ2VudW1iZXInLCBbJ2Zvcm1hdHRlcicsIGZ1bmN0aW9uIChmb3JtYXR0ZXIpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChpbnB1dCwgZGVjKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgZGVjaW1hbHMgPSAwO1xyXG4gICAgICAgICAgICAgICAgaWYgKGlucHV0IDwgMTAgfHwgaW5wdXQgPiAxMDAwMDAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZGVjaW1hbHMgPSAyO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZvcm1hdHRlci5mb3JtYXRMYXJnZU51bWJlcihpbnB1dCwgZGVjIHx8IGRlY2ltYWxzKTtcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICB9XSk7XHJcbn0od2luZG93LCB3aW5kb3cuYW5ndWxhcikpO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2FwcC9tb2R1bGVzL21vbml0b3JpbmcvanMvZGlyZWN0aXZlcy91aS5wYXJ0aWN1bGFyLm1ldHJpY3NsYXJnZW51bWJlci5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///184\n");

/***/ }),

/***/ 539:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(540);\n__webpack_require__(545);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL21vbml0b3JpbmcuanM/ZTJhZCJdLCJuYW1lcyI6WyJyZXF1aXJlIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxtQkFBT0EsQ0FBQyxHQUFSO0FBQ0FBLG1CQUFPQSxDQUFDLEdBQVIiLCJmaWxlIjoiNTM5LmpzIiwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnLi9qcy9tb25pdG9yZWRfZW5kcG9pbnRzLm1vZHVsZScpO1xyXG5yZXF1aXJlKCcuL2pzL2VuZHBvaW50X2RldGFpbHMubW9kdWxlJyk7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vYXBwL21vZHVsZXMvbW9uaXRvcmluZy9tb25pdG9yaW5nLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///539\n");

/***/ }),

/***/ 540:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function (window, angular) {\n    'use strict';\n\n    angular.module('monitored_endpoints', []);\n\n    __webpack_require__(541);\n    __webpack_require__(178);\n    __webpack_require__(542);\n    __webpack_require__(543);\n    __webpack_require__(179);\n\n    __webpack_require__(180);\n    __webpack_require__(181);\n    __webpack_require__(182);\n    __webpack_require__(183);\n    __webpack_require__(184);\n})(window, window.angular);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL21vbml0b3JlZF9lbmRwb2ludHMubW9kdWxlLmpzPzA3YmQiXSwibmFtZXMiOlsid2luZG93IiwiYW5ndWxhciIsIm1vZHVsZSIsInJlcXVpcmUiXSwibWFwcGluZ3MiOiI7O0FBQUMsV0FBVUEsTUFBVixFQUFrQkMsT0FBbEIsRUFBMkI7QUFDeEI7O0FBQ0FBLFlBQVFDLE1BQVIsQ0FBZSxxQkFBZixFQUFzQyxFQUF0Qzs7QUFFQUMsdUJBQU9BLENBQUMsR0FBUjtBQUNBQSx1QkFBT0EsQ0FBQyxHQUFSO0FBQ0FBLHVCQUFPQSxDQUFDLEdBQVI7QUFDQUEsdUJBQU9BLENBQUMsR0FBUjtBQUNBQSx1QkFBT0EsQ0FBQyxHQUFSOztBQUVBQSx1QkFBT0EsQ0FBQyxHQUFSO0FBQ0FBLHVCQUFPQSxDQUFDLEdBQVI7QUFDQUEsdUJBQU9BLENBQUMsR0FBUjtBQUNBQSx1QkFBT0EsQ0FBQyxHQUFSO0FBQ0FBLHVCQUFPQSxDQUFDLEdBQVI7QUFDSCxDQWZBLEVBZUNILE1BZkQsRUFlU0EsT0FBT0MsT0FmaEIsQ0FBRCIsImZpbGUiOiI1NDAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gKHdpbmRvdywgYW5ndWxhcikge1xyXG4gICAgJ3VzZSBzdHJpY3QnO1xyXG4gICAgYW5ndWxhci5tb2R1bGUoJ21vbml0b3JlZF9lbmRwb2ludHMnLCBbXSk7XHJcblxyXG4gICAgcmVxdWlyZSgnLi9zZXJ2aWNlcy9zZXJ2aWNlcy5tb25pdG9yaW5nJyk7XHJcbiAgICByZXF1aXJlKCcuL3NlcnZpY2VzL3NlcnZpY2VzLmNvbm5lY3Rpdml0eU5vdGlmaWVyJyk7XHJcbiAgICByZXF1aXJlKCcuL21vbml0b3JlZF9lbmRwb2ludHMuY29udHJvbGxlcicpO1xyXG4gICAgcmVxdWlyZSgnLi9tb25pdG9yZWRfZW5kcG9pbnRzLnJvdXRlLmpzJyk7XHJcbiAgICByZXF1aXJlKCcuL2NvbnN0YW50LmRpYWdyYW1zLmpzJyk7XHJcblxyXG4gICAgcmVxdWlyZSgnLi9kaXJlY3RpdmVzL3VpLnBhcnRpY3VsYXIubW9uaXRvcmluZ0Nvbm5lY3Rpdml0eVN0YXR1cy5qcycpO1xyXG4gICAgcmVxdWlyZSgnLi9kaXJlY3RpdmVzL3VpLnBhcnRpY3VsYXIuZ3JhcGguanMnKTtcclxuICAgIHJlcXVpcmUoJy4vZGlyZWN0aXZlcy91aS5wYXJ0aWN1bGFyLmdyYXBoZGVjaW1hbC5qcycpO1xyXG4gICAgcmVxdWlyZSgnLi9kaXJlY3RpdmVzL3VpLnBhcnRpY3VsYXIuZ3JhcGhkdXJhdGlvbi5qcycpO1xyXG4gICAgcmVxdWlyZSgnLi9kaXJlY3RpdmVzL3VpLnBhcnRpY3VsYXIubWV0cmljc2xhcmdlbnVtYmVyLmpzJyk7XHJcbn0od2luZG93LCB3aW5kb3cuYW5ndWxhcikpO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2FwcC9tb2R1bGVzL21vbml0b3JpbmcvanMvbW9uaXRvcmVkX2VuZHBvaW50cy5tb2R1bGUuanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///540\n");

/***/ }),

/***/ 541:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function (window, angular, $, Rx) {\n    'use strict';\n\n    function Service($http, rx, connectionsManager, uri, $q) {\n\n        var mu = connectionsManager.getMonitoringUrl();\n\n        function createEndpointsSource(historyPeriod, refreshInterval) {\n            return Rx.Observable.interval(refreshInterval).startWith(0).flatMap(function (i) {\n                return Rx.Observable.fromPromise(loadEndpointDataFromMonitoringService(historyPeriod));\n            }).selectMany(function (endpoints) {\n                return endpoints;\n            });\n        }\n\n        function loadEndpointDataFromMonitoringService(historyPeriod) {\n            return $http.get(uri.join(mu, 'monitored-endpoints') + '?history=' + historyPeriod).then(function (result) {\n                return result.data.length !== 0 ? result.data : [{ empty: true }];\n            }, function (error) {\n                return [{ error: error }];\n            });\n        }\n\n        function loadEndpointDetailsFromMonitoringService(endpointName, historyPeriod) {\n            return $http.get(uri.join(mu, 'monitored-endpoints', endpointName) + \"?history=\" + historyPeriod).then(function (result) {\n                filterOutSystemMessage(result.data);\n                return result.data;\n            }, function (error) {\n                return { error: error };\n            });\n        }\n\n        function filterOutSystemMessage(data) {\n            data.messageTypes = data.messageTypes.filter(function (mt) {\n                return mt.id;\n            });\n        }\n\n        function createEndpointDetailsSource(endpointName, historyPeriod, refreshInterval) {\n            return Rx.Observable.interval(refreshInterval).startWith(0).flatMap(function (i) {\n                return Rx.Observable.fromPromise(loadEndpointDetailsFromMonitoringService(endpointName, historyPeriod));\n            });\n        }\n\n        function getMonitoredEndpoints() {\n            return $http.get(uri.join(mu, 'monitored-endpoints') + '?history=1');\n        }\n\n        function removeEndpointInstance(endpointName, instanceId) {\n            return $http.delete(uri.join(mu, 'monitored-instance', endpointName, instanceId));\n        }\n\n        function getServiceControlMonitoringVersion() {\n            return $http.get(mu).then(function (response) {\n                return response.headers('X-Particular-Version');\n            });\n        }\n\n        function isRemovingEndpointEnabled() {\n            return $http({\n                method: 'OPTIONS',\n                url: mu\n            }).then(function (response) {\n                var headers = response.headers();\n\n                var allow = headers.allow;\n                var deleteAllowed = allow.indexOf('DELETE') >= 0;\n\n                return deleteAllowed;\n            }, function () {\n                return false;\n            });\n        }\n\n        var service = {\n            createEndpointsSource: createEndpointsSource,\n            createEndpointDetailsSource: createEndpointDetailsSource,\n            getMonitoredEndpoints: getMonitoredEndpoints,\n            getServiceControlMonitoringVersion: getServiceControlMonitoringVersion,\n            removeEndpointInstance: removeEndpointInstance,\n            isRemovingEndpointEnabled: isRemovingEndpointEnabled\n        };\n\n        return service;\n    }\n\n    Service.$inject = ['$http', 'rx', 'connectionsManager', 'uri', '$q', 'toastService'];\n\n    angular.module('services.monitoringService', ['sc']).service('monitoringService', Service);\n})(window, window.angular, window.jQuery, window.Rx);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///541\n");

/***/ }),

/***/ 542:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function (window, angular, Rx) {\n    'use strict';\n\n    function controller($scope, $location, monitoringService, serviceControlService, toastService, historyPeriodsService, rx, $filter, smallGraphsMinimumYAxis, connectivityNotifier, connectionsManager) {\n\n        var subscription, endpointsFromScSubscription;\n\n        $scope.periods = historyPeriodsService.getAllPeriods();\n        $scope.selectedPeriod = historyPeriodsService.getDefaultPeriod();\n        $scope.smallGraphsMinimumYAxis = smallGraphsMinimumYAxis;\n        $scope.endpoints = [];\n        $scope.loading = true;\n        $scope.location = $location;\n        $scope.monitoringUrl = connectionsManager.getMonitoringUrl();\n        $scope.hasData = false; // TODO: UI toggles between 'no connectivity' and 'no data' but unknown how to set this via the monitoringService rx observable. \n\n        $scope.selectPeriod = function (period) {\n            $scope.selectedPeriod = period;\n            historyPeriodsService.saveSelectedPeriod(period);\n            updateUI();\n        };\n\n        $scope.getDetailsUrl = function (endpoint) {\n            return '#/monitoring/endpoint/' + endpoint.name + '?historyPeriod=' + $scope.selectedPeriod.value;\n        };\n\n        $scope.totalThroughput = function () {\n            return Math.round($scope.endpoints.reduce(function (total, currentEndpoint) {\n                return total + currentEndpoint.metrics.throughput.average;\n            }, 0));\n        };\n\n        function fillDisplayValuesForEndpoint(endpoint) {\n\n            $filter('graphduration')(endpoint.metrics.processingTime);\n            $filter('graphduration')(endpoint.metrics.criticalTime);\n            $filter('graphdecimal')(endpoint.metrics.queueLength, 0);\n            $filter('graphdecimal')(endpoint.metrics.throughput, 2);\n            $filter('graphdecimal')(endpoint.metrics.retries, 2);\n        }\n\n        function mergeIn(destination, source) {\n            for (var propName in source) {\n                if (Object.prototype.hasOwnProperty.call(source, propName)) {\n                    destination[propName] = source[propName];\n                }\n            }\n        }\n\n        function updateUI() {\n            if (subscription) {\n                subscription.dispose();\n            }\n\n            if (endpointsFromScSubscription) {\n                endpointsFromScSubscription.dispose();\n            }\n\n            var selectedPeriod = $scope.selectedPeriod;\n\n            subscription = monitoringService.createEndpointsSource(selectedPeriod.value, selectedPeriod.refreshInterval).subscribe(function (endpoint) {\n\n                $scope.loading = false;\n                $scope.hasData = !endpoint.empty;\n                $scope.supportsEndpointCount = Object.prototype.hasOwnProperty.call(endpoint, 'connectedCount');\n\n                if (endpoint.empty) {\n                    return;\n                }\n\n                if (endpoint.error) {\n                    connectivityNotifier.reportFailedConnection();\n                    if ($scope.endpoints) {\n                        $scope.endpoints.forEach(function (item) {\n                            return item.isScMonitoringDisconnected = true;\n                        });\n                    }\n                } else {\n                    connectivityNotifier.reportSuccessfulConnection();\n                    var index = $scope.endpoints.findIndex(function (item) {\n                        return item.name === endpoint.name;\n                    });\n\n                    endpoint.isScMonitoringDisconnected = false;\n                    fillDisplayValuesForEndpoint(endpoint);\n                    if (index >= 0) {\n                        mergeIn($scope.endpoints[index], endpoint);\n                    } else {\n                        $scope.endpoints.push(endpoint);\n\n                        $scope.endpoints.sort(function (first, second) {\n                            if (first.name < second.name) {\n                                return -1;\n                            }\n\n                            if (first.name > second.name) {\n                                return 1;\n                            }\n\n                            return 0;\n                        });\n                    }\n                }\n\n                $scope.$apply();\n            });\n\n            endpointsFromScSubscription = Rx.Observable.interval(5000).startWith(0).flatMap(function (i) {\n                return Rx.Observable.fromPromise(serviceControlService.getExceptionGroups('Endpoint Name', ''));\n            }).selectMany(function (endpoints) {\n                return endpoints.data;\n            }).subscribe(function (endpoint) {\n                if (endpoint.operation_status === 'ArchiveCompleted') {\n                    return;\n                }\n                var index = $scope.endpoints.findIndex(function (item) {\n                    return item.name === endpoint.title;\n                });\n                if (index >= 0) {\n                    $scope.endpoints[index].serviceControlId = endpoint.id;\n                    $scope.endpoints[index].errorCount = endpoint.count;\n                } else {\n                    $scope.endpoints.push({ name: endpoint.title, errorCount: endpoint.count, serviceControlId: endpoint.id, isScMonitoringDisconnected: true });\n                }\n            });\n        }\n\n        updateUI();\n\n        $scope.$on(\"$destroy\", function handler() {\n            subscription.dispose();\n            endpointsFromScSubscription.dispose();\n        });\n    }\n\n    controller.$inject = ['$scope', '$location', 'monitoringService', 'serviceControlService', 'toastService', 'historyPeriodsService', 'rx', '$filter', 'smallGraphsMinimumYAxis', 'connectivityNotifier', 'connectionsManager'];\n\n    angular.module('monitored_endpoints').controller('monitoredEndpointsCtrl', controller);\n})(window, window.angular, window.Rx);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///542\n");

/***/ }),

/***/ 543:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function (window, angular) {\n    'use strict';\n\n    function routeProvider($routeProvider) {\n        var template = __webpack_require__(544);\n\n        $routeProvider.when('/monitoring', {\n            data: {\n                pageTitle: 'Monitored Endpoints'\n            },\n            template: template,\n            controller: 'monitoredEndpointsCtrl',\n            controllerAs: 'vm',\n            reloadOnSearch: false\n        });\n    }\n\n    routeProvider.$inject = ['$routeProvider'];\n\n    angular.module('monitored_endpoints').config(routeProvider);\n})(window, window.angular);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL21vbml0b3JlZF9lbmRwb2ludHMucm91dGUuanM/MjcwNiJdLCJuYW1lcyI6WyJ3aW5kb3ciLCJhbmd1bGFyIiwicm91dGVQcm92aWRlciIsIiRyb3V0ZVByb3ZpZGVyIiwidGVtcGxhdGUiLCJyZXF1aXJlIiwid2hlbiIsImRhdGEiLCJwYWdlVGl0bGUiLCJjb250cm9sbGVyIiwiY29udHJvbGxlckFzIiwicmVsb2FkT25TZWFyY2giLCIkaW5qZWN0IiwibW9kdWxlIiwiY29uZmlnIl0sIm1hcHBpbmdzIjoiOztBQUFDLFdBQVVBLE1BQVYsRUFBa0JDLE9BQWxCLEVBQTJCO0FBQ3hCOztBQUVBLGFBQVNDLGFBQVQsQ0FBdUJDLGNBQXZCLEVBQXVDO0FBQ25DLFlBQUlDLFdBQVdDLG1CQUFPQSxDQUFDLEdBQVIsQ0FBZjs7QUFFQUYsdUJBQWVHLElBQWYsQ0FBb0IsYUFBcEIsRUFBbUM7QUFDL0JDLGtCQUFNO0FBQ0ZDLDJCQUFXO0FBRFQsYUFEeUI7QUFJL0JKLHNCQUFVQSxRQUpxQjtBQUsvQkssd0JBQVksd0JBTG1CO0FBTS9CQywwQkFBYyxJQU5pQjtBQU8vQkMsNEJBQWdCO0FBUGUsU0FBbkM7QUFTSDs7QUFFRFQsa0JBQWNVLE9BQWQsR0FBd0IsQ0FDcEIsZ0JBRG9CLENBQXhCOztBQUlBWCxZQUFRWSxNQUFSLENBQWUscUJBQWYsRUFDS0MsTUFETCxDQUNZWixhQURaO0FBRUgsQ0F2QkEsRUF1QkVGLE1BdkJGLEVBdUJVQSxPQUFPQyxPQXZCakIsQ0FBRCIsImZpbGUiOiI1NDMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gKHdpbmRvdywgYW5ndWxhcikge1xyXG4gICAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICAgIGZ1bmN0aW9uIHJvdXRlUHJvdmlkZXIoJHJvdXRlUHJvdmlkZXIpIHtcclxuICAgICAgICBsZXQgdGVtcGxhdGUgPSByZXF1aXJlKCcuLy4uL3ZpZXdzL21vbml0b3JlZF9lbmRwb2ludHMuaHRtbCcpO1xyXG5cclxuICAgICAgICAkcm91dGVQcm92aWRlci53aGVuKCcvbW9uaXRvcmluZycsIHtcclxuICAgICAgICAgICAgZGF0YToge1xyXG4gICAgICAgICAgICAgICAgcGFnZVRpdGxlOiAnTW9uaXRvcmVkIEVuZHBvaW50cydcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgdGVtcGxhdGU6IHRlbXBsYXRlLFxyXG4gICAgICAgICAgICBjb250cm9sbGVyOiAnbW9uaXRvcmVkRW5kcG9pbnRzQ3RybCcsXHJcbiAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcclxuICAgICAgICAgICAgcmVsb2FkT25TZWFyY2g6IGZhbHNlXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgcm91dGVQcm92aWRlci4kaW5qZWN0ID0gW1xyXG4gICAgICAgICckcm91dGVQcm92aWRlcidcclxuICAgIF07XHJcblxyXG4gICAgYW5ndWxhci5tb2R1bGUoJ21vbml0b3JlZF9lbmRwb2ludHMnKVxyXG4gICAgICAgIC5jb25maWcocm91dGVQcm92aWRlcik7XHJcbn0gKHdpbmRvdywgd2luZG93LmFuZ3VsYXIpKTtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL21vbml0b3JlZF9lbmRwb2ludHMucm91dGUuanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///543\n");

/***/ }),

/***/ 544:
/***/ (function(module, exports) {

eval("module.exports = \"<platform-trial-expired ng-if=isPlatformTrialExpired></platform-trial-expired> <platform-expired ng-if=isPlatformExpired></platform-expired> <upgrade-protection-expired ng-if=isInvalidDueToUpgradeProtectionExpired></upgrade-protection-expired> <div class=container ng-show=endpoints.length ng-if=\\\"!isPlatformTrialExpired && !isPlatformExpired && !isInvalidDueToUpgradeProtectionExpired\\\"> <div class=\\\"row monitoring-head\\\"> <div class=\\\"col-xs-9 no-side-padding list-section\\\"> <h1>Endpoints overview</h1> </div> <div class=\\\"col-xs-3 no-side-padding toolbar-menus\\\"> <ul class=\\\"nav nav-pills period-selector\\\"> <li role=presentation ng-repeat=\\\"period in periods\\\" ng-class=\\\"(period.value == selectedPeriod.value ? 'active' : 'notselected')\\\"> <a ng-click=selectPeriod(period) href=\\\"#/monitoring?historyPeriod={{period.value}}\\\" uib-tooltip={{period.refreshIntervalText}}.>{{period.text}}</a> </li> </ul> </div> </div> </div> <div class=container ng-if=\\\"!isPlatformTrialExpired && !isPlatformExpired && !isInvalidDueToUpgradeProtectionExpired\\\"> <section ng-show=true> <div class=sp-loader ng-if=loading></div> <div ng-include=\\\"'modules/monitoring/views/monitoring_not_available.html'\\\" ng-show=\\\"!endpoints.length && !loading && hasData\\\"></div> <div ng-include=\\\"'modules/monitoring/views/monitoring_no_data.html'\\\" ng-show=\\\"!endpoints.length && !loading && !hasData\\\"></div> <div ng-show=endpoints.length class=\\\"row box box-no-click table-head-row\\\"> <div class=\\\"col-xs-2 col-xl-7\\\"> <div class=\\\"row box-header\\\"> <div class=col-xs-12> Endpoint name </div> </div> </div> <div class=\\\"col-xs-2 col-xl-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=\\\"col-xs-12 no-side-padding\\\" uib-tooltip=\\\"Queue length: The number of messages waiting to be processed in the input queue(s) of the endpoint.\\\"> Queue Length <span class=table-header-unit>(msgs)</span> </div> </div> </div> <div class=\\\"col-xs-2 col-xl-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=\\\"col-xs-12 no-side-padding\\\" uib-tooltip=\\\"Throughput: The number of messages per second successfully processed by a receiving endpoint. ({{totalThroughput()}} msgs/s average throughout for all endpoints this period)\\\"> Throughput <span class=table-header-unit>(msgs/s)</span> </div> </div> </div> <div class=\\\"col-xs-2 col-xl-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=\\\"col-xs-12 no-side-padding\\\" uib-tooltip=\\\"Scheduled retry rate: The number of messages per second scheduled for retries (immediate or delayed).\\\"> Scheduled retry rate <span class=table-header-unit>(msgs/s)</span> </div> </div> </div> <div class=\\\"col-xs-2 col-xl-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=\\\"col-xs-12 no-side-padding\\\" uib-tooltip=\\\"Processing time: The time taken for a receiving endpoint to successfully process a message.\\\"> Processing Time <span class=table-header-unit>(t)</span> </div> </div> </div> <div class=\\\"col-xs-2 col-xl-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=\\\"col-xs-12 no-side-padding\\\" uib-tooltip=\\\"Critical time: The elapsed time from when a message was sent, until it was successfully processed by a receiving endpoint.\\\"> Critical Time <span class=table-header-unit>(t)</span> </div> </div> </div> </div> <div class=row> <div class=\\\"col-xs-12 no-side-padding\\\"> <div class=\\\"row box endpoint-row\\\" ng-repeat=\\\"endpoint in endpoints\\\" ng-mouseenter=\\\"endpoint.hover1=true\\\" ng-mouseleave=\\\"endpoint.hover1=false\\\"> <div class=\\\"col-xs-12 no-side-padding\\\"> <div class=row> <div class=\\\"col-xs-2 col-xl-7 endpoint-name name-overview\\\"> <div class=\\\"row box-header\\\"> <div class=\\\"col-lg-max-8 no-side-padding lead righ-side-ellipsis endpoint-details-link\\\"> <a ng-click=\\\"endpoint.isExpanded = !endpoint.isExpanded\\\" ng-href={{getDetailsUrl(endpoint)}} uib-tooltip={{endpoint.name}}>{{endpoint.name}}</a> <span ng-if=\\\"endpoint.connectedCount || endpoint.disconnectedCount\\\" uib-tooltip=\\\"Endpoint instance(s): {{endpoint.connectedCount || 0}}\\\">({{endpoint.connectedCount || 0}})</span> </div> <div class=\\\"col-xs-5 no-side-padding endpoint-status\\\"> <span class=warning ng-if=endpoint.isScMonitoringDisconnected> <i class=\\\"fa pa-monitoring-lost endpoints-overview\\\" uib-tooltip=\\\"Unable to connect to monitoring server\\\"></i> </span> <span class=warning ng-if=\\\"endpoint.isStale && (!supportsEndpointCount || !endpoint.connectedCount)\\\" uib-tooltip=\\\"No data received from any instance\\\"> <a class=monitoring-lost-link ng-href=\\\"{{getDetailsUrl(endpoint)}}&tab=instancesBreakdown\\\"><i class=\\\"fa pa-endpoint-lost endpoints-overview\\\"></i></a> </span> <span class=warning ng-if=endpoint.errorCount uib-tooltip=\\\"{{endpoint.errorCount | metricslargenumber}} failed messages associated with this endpoint. Click to see list.\\\"> <a ng-if=endpoint.errorCount class=\\\"warning btn\\\" href=#/failed-messages/groups/{{endpoint.serviceControlId}}> <i class=\\\"fa fa-envelope\\\"></i> <span class=\\\"badge badge-important ng-binding\\\">{{endpoint.errorCount | metricslargenumber}}</span> </a> </span> </div> </div> </div> <div class=\\\"col-xs-2 col-xl-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=no-side-padding> <graph plot-data=endpoint.metrics.queueLength minimum-yaxis={{smallGraphsMinimumYAxis.queueLength}} class=\\\"graph queue-length pull-left\\\"></graph> </div> <div class=\\\"no-side-padding sparkline-value\\\"> {{(endpoint.isStale == true || endpoint.isScMonitoringDisconnected == true) ? \\\"\\\" : endpoint.metrics.queueLength.displayValue}} <strong ng-if=\\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\\">?</strong> </div> </div> </div> <div class=\\\"col-xs-2 col-xl-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=no-side-padding> <graph plot-data=endpoint.metrics.throughput minimum-yaxis={{smallGraphsMinimumYAxis.throughput}} class=\\\"graph throughput pull-left\\\"></graph> </div> <div class=\\\"no-side-padding sparkline-value\\\"> {{(endpoint.isStale == true || endpoint.isScMonitoringDisconnected == true) ? \\\"\\\" : endpoint.metrics.throughput.displayValue}} <strong ng-if=\\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\\">?</strong> </div> </div> </div> <div class=\\\"col-xs-2 col-xl-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=no-side-padding> <graph plot-data=endpoint.metrics.retries minimum-yaxis={{smallGraphsMinimumYAxis.retries}} class=\\\"graph retries pull-left\\\"></graph> </div> <div class=\\\"no-side-padding sparkline-value\\\"> {{(endpoint.isStale == true || endpoint.isScMonitoringDisconnected == true) ? \\\"\\\" : endpoint.metrics.retries.displayValue}} <strong ng-if=\\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\\">?</strong> </div> </div> </div> <div class=\\\"col-xs-2 col-xl-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=no-side-padding> <graph plot-data=endpoint.metrics.processingTime minimum-yaxis={{smallGraphsMinimumYAxis.processingTime}} class=\\\"graph processing-time pull-left\\\"></graph> </div> <div class=\\\"no-side-padding sparkline-value\\\" ng-class=endpoint.metrics.processingTime.displayValue.unit> {{(endpoint.isStale == true || endpoint.isScMonitoringDisconnected == true) ? \\\"\\\" : endpoint.metrics.processingTime.displayValue.value}} <strong ng-if=\\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\\">?</strong> <span ng-if=\\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\\" class=unit> {{endpoint.metrics.processingTime.displayValue.unit}}</span> </div> </div> </div> <div class=\\\"col-xs-2 col-xl-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=no-side-padding> <graph plot-data=endpoint.metrics.criticalTime minimum-yaxis={{smallGraphsMinimumYAxis.criticalTime}} class=\\\"graph critical-time pull-left\\\"></graph> </div> <div class=\\\"no-side-padding sparkline-value\\\" ng-class=endpoint.metrics.criticalTime.displayValue.unit> {{(endpoint.isStale == true || endpoint.isScMonitoringDisconnected == true) ? \\\"\\\" : endpoint.metrics.criticalTime.displayValue.value}} <strong ng-if=\\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\\">?</strong> <span ng-if=\\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\\" class=unit> {{endpoint.metrics.criticalTime.displayValue.unit}}</span> </div> </div> </div> </div> </div> </div> </div> </div> </section> </div> \";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///544\n");

/***/ }),

/***/ 545:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function (window, angular) {\n    'use strict';\n\n    angular.module('endpoint_details', []);\n\n    __webpack_require__(546);\n    __webpack_require__(178);\n    __webpack_require__(547);\n    __webpack_require__(548);\n    __webpack_require__(179);\n\n    __webpack_require__(180);\n    __webpack_require__(181);\n    __webpack_require__(182);\n    __webpack_require__(550);\n    __webpack_require__(183);\n    __webpack_require__(551);\n    __webpack_require__(184);\n    __webpack_require__(552);\n})(window, window.angular);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL2VuZHBvaW50X2RldGFpbHMubW9kdWxlLmpzPzRmMGIiXSwibmFtZXMiOlsid2luZG93IiwiYW5ndWxhciIsIm1vZHVsZSIsInJlcXVpcmUiXSwibWFwcGluZ3MiOiI7O0FBQUMsV0FBU0EsTUFBVCxFQUFpQkMsT0FBakIsRUFBMEI7QUFDdkI7O0FBRUFBLFlBQVFDLE1BQVIsQ0FBZSxrQkFBZixFQUFtQyxFQUFuQzs7QUFFQUMsdUJBQU9BLENBQUMsR0FBUjtBQUNBQSx1QkFBT0EsQ0FBQyxHQUFSO0FBQ0FBLHVCQUFPQSxDQUFDLEdBQVI7QUFDQUEsdUJBQU9BLENBQUMsR0FBUjtBQUNBQSx1QkFBT0EsQ0FBQyxHQUFSOztBQUVBQSx1QkFBT0EsQ0FBQyxHQUFSO0FBQ0FBLHVCQUFPQSxDQUFDLEdBQVI7QUFDQUEsdUJBQU9BLENBQUMsR0FBUjtBQUNBQSx1QkFBT0EsQ0FBQyxHQUFSO0FBQ0FBLHVCQUFPQSxDQUFDLEdBQVI7QUFDQUEsdUJBQU9BLENBQUMsR0FBUjtBQUNBQSx1QkFBT0EsQ0FBQyxHQUFSO0FBQ0FBLHVCQUFPQSxDQUFDLEdBQVI7QUFDSCxDQW5CQSxFQW1CQ0gsTUFuQkQsRUFtQlNBLE9BQU9DLE9BbkJoQixDQUFEIiwiZmlsZSI6IjU0NS5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbih3aW5kb3csIGFuZ3VsYXIpIHtcclxuICAgICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgICBhbmd1bGFyLm1vZHVsZSgnZW5kcG9pbnRfZGV0YWlscycsIFtdKTtcclxuXHJcbiAgICByZXF1aXJlKCcuL3NlcnZpY2VzL3NlcnZpY2VzLm1lc3NhZ2VUeXBlUGFyc2VyJyk7XHJcbiAgICByZXF1aXJlKCcuL3NlcnZpY2VzL3NlcnZpY2VzLmNvbm5lY3Rpdml0eU5vdGlmaWVyJyk7XHJcbiAgICByZXF1aXJlKCcuL2VuZHBvaW50X2RldGFpbHMuY29udHJvbGxlcicpO1xyXG4gICAgcmVxdWlyZSgnLi9lbmRwb2ludF9kZXRhaWxzLnJvdXRlLmpzJyk7XHJcbiAgICByZXF1aXJlKCcuL2NvbnN0YW50LmRpYWdyYW1zLmpzJyk7XHJcblxyXG4gICAgcmVxdWlyZSgnLi9kaXJlY3RpdmVzL3VpLnBhcnRpY3VsYXIubW9uaXRvcmluZ0Nvbm5lY3Rpdml0eVN0YXR1cy5qcycpO1xyXG4gICAgcmVxdWlyZSgnLi9kaXJlY3RpdmVzL3VpLnBhcnRpY3VsYXIuZ3JhcGguanMnKTtcclxuICAgIHJlcXVpcmUoJy4vZGlyZWN0aXZlcy91aS5wYXJ0aWN1bGFyLmdyYXBoZGVjaW1hbC5qcycpO1xyXG4gICAgcmVxdWlyZSgnLi9kaXJlY3RpdmVzL3VpLnBhcnRpY3VsYXIuZHVyYXRpb24uanMnKTtcclxuICAgIHJlcXVpcmUoJy4vZGlyZWN0aXZlcy91aS5wYXJ0aWN1bGFyLmdyYXBoZHVyYXRpb24uanMnKTtcclxuICAgIHJlcXVpcmUoJy4vZGlyZWN0aXZlcy91aS5wYXJ0aWN1bGFyLmxhcmdlR3JhcGguanMnKTtcclxuICAgIHJlcXVpcmUoJy4vZGlyZWN0aXZlcy91aS5wYXJ0aWN1bGFyLm1ldHJpY3NsYXJnZW51bWJlci5qcycpO1xyXG4gICAgcmVxdWlyZSgnLi9kaXJlY3RpdmVzL3VpLnBhcnRpY3VsYXIubWVzc2FnZVR5cGVzQ2hhbmdlSW5kaWNhdG9yLmpzJyk7XHJcbn0od2luZG93LCB3aW5kb3cuYW5ndWxhcikpO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2FwcC9tb2R1bGVzL21vbml0b3JpbmcvanMvZW5kcG9pbnRfZGV0YWlscy5tb2R1bGUuanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///545\n");

/***/ }),

/***/ 546:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function (window, angular, $) {\n    'use strict';\n\n    function Service() {\n\n        function parseTheMessageTypeData(messageType) {\n            if (!messageType.typeName) return;\n\n            if (messageType.typeName.indexOf(';') > 0) {\n                var messageTypeHierarchy = messageType.typeName.split(';');\n                messageTypeHierarchy = messageTypeHierarchy.map(function (item) {\n                    var obj = {};\n                    var segments = item.split(',');\n                    obj.typeName = segments[0];\n                    obj.assemblyName = segments[1];\n                    obj.assemblyVersion = segments[2].substring(segments[2].indexOf('=') + 1);\n\n                    if (!segments[4].endsWith('=null')) {\n                        //SC monitoring fills culture only if PublicKeyToken is filled\n                        obj.culture = segments[3];\n                        obj.publicKeyToken = segments[4];\n                    }\n                    return obj;\n                });\n                messageType.messageTypeHierarchy = messageTypeHierarchy;\n                messageType.typeName = messageTypeHierarchy.reduce(function (sum, item) {\n                    return (sum ? sum + ', ' : '') + item.typeName;\n                }, '');\n                messageType.containsTypeHierarchy = true;\n                messageType.tooltipText = messageTypeHierarchy.reduce(function (sum, item) {\n                    return (sum ? sum + '<br> ' : '') + (item.typeName + ' |' + item.assemblyName + '-' + item.assemblyVersion) + (item.culture ? ' |' + item.culture : '') + (item.publicKeyToken ? ' |' + item.publicKeyToken : '');\n                }, '');\n            } else {\n                var tooltip = messageType.typeName + ' | ' + messageType.assemblyName + '-' + messageType.assemblyVersion;\n                if (messageType.culture && messageType.culture != 'null') {\n                    tooltip += ' | Culture=' + messageType.culture;\n                }\n\n                if (messageType.publicKeyToken && messageType.publicKeyToken != 'null') {\n                    tooltip += ' | PublicKeyToken=' + messageType.publicKeyToken;\n                }\n\n                messageType.tooltipText = tooltip;\n            }\n        }\n\n        var service = {\n            parseTheMessageTypeData: parseTheMessageTypeData\n        };\n\n        return service;\n    }\n\n    Service.$inject = [];\n\n    angular.module('services.messageTypeParser', ['sc']).service('messageTypeParser', Service);\n})(window, window.angular, window.jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL3NlcnZpY2VzL3NlcnZpY2VzLm1lc3NhZ2VUeXBlUGFyc2VyLmpzP2YzZTQiXSwibmFtZXMiOlsid2luZG93IiwiYW5ndWxhciIsIiQiLCJTZXJ2aWNlIiwicGFyc2VUaGVNZXNzYWdlVHlwZURhdGEiLCJtZXNzYWdlVHlwZSIsInR5cGVOYW1lIiwiaW5kZXhPZiIsIm1lc3NhZ2VUeXBlSGllcmFyY2h5Iiwic3BsaXQiLCJtYXAiLCJpdGVtIiwib2JqIiwic2VnbWVudHMiLCJhc3NlbWJseU5hbWUiLCJhc3NlbWJseVZlcnNpb24iLCJzdWJzdHJpbmciLCJlbmRzV2l0aCIsImN1bHR1cmUiLCJwdWJsaWNLZXlUb2tlbiIsInJlZHVjZSIsInN1bSIsImNvbnRhaW5zVHlwZUhpZXJhcmNoeSIsInRvb2x0aXBUZXh0IiwidG9vbHRpcCIsInNlcnZpY2UiLCIkaW5qZWN0IiwibW9kdWxlIiwialF1ZXJ5Il0sIm1hcHBpbmdzIjoiOztBQUFDLFdBQVVBLE1BQVYsRUFBa0JDLE9BQWxCLEVBQTJCQyxDQUEzQixFQUE4QjtBQUMzQjs7QUFFQSxhQUFTQyxPQUFULEdBQW1COztBQUVmLGlCQUFTQyx1QkFBVCxDQUFpQ0MsV0FBakMsRUFBOEM7QUFDMUMsZ0JBQUksQ0FBQ0EsWUFBWUMsUUFBakIsRUFDSTs7QUFFSixnQkFBSUQsWUFBWUMsUUFBWixDQUFxQkMsT0FBckIsQ0FBNkIsR0FBN0IsSUFBb0MsQ0FBeEMsRUFBMkM7QUFDdkMsb0JBQUlDLHVCQUF1QkgsWUFBWUMsUUFBWixDQUFxQkcsS0FBckIsQ0FBMkIsR0FBM0IsQ0FBM0I7QUFDQUQsdUNBQXVCQSxxQkFBcUJFLEdBQXJCLENBQXlCLFVBQUNDLElBQUQsRUFBVTtBQUN0RCx3QkFBSUMsTUFBTSxFQUFWO0FBQ0Esd0JBQUlDLFdBQVdGLEtBQUtGLEtBQUwsQ0FBVyxHQUFYLENBQWY7QUFDQUcsd0JBQUlOLFFBQUosR0FBZU8sU0FBUyxDQUFULENBQWY7QUFDQUQsd0JBQUlFLFlBQUosR0FBbUJELFNBQVMsQ0FBVCxDQUFuQjtBQUNBRCx3QkFBSUcsZUFBSixHQUFzQkYsU0FBUyxDQUFULEVBQVlHLFNBQVosQ0FBc0JILFNBQVMsQ0FBVCxFQUFZTixPQUFaLENBQW9CLEdBQXBCLElBQTJCLENBQWpELENBQXRCOztBQUVBLHdCQUFJLENBQUNNLFNBQVMsQ0FBVCxFQUFZSSxRQUFaLENBQXFCLE9BQXJCLENBQUwsRUFBb0M7QUFBRTtBQUNsQ0wsNEJBQUlNLE9BQUosR0FBY0wsU0FBUyxDQUFULENBQWQ7QUFDQUQsNEJBQUlPLGNBQUosR0FBcUJOLFNBQVMsQ0FBVCxDQUFyQjtBQUNIO0FBQ0QsMkJBQU9ELEdBQVA7QUFDSCxpQkFac0IsQ0FBdkI7QUFhQVAsNEJBQVlHLG9CQUFaLEdBQW1DQSxvQkFBbkM7QUFDQUgsNEJBQVlDLFFBQVosR0FDSUUscUJBQXFCWSxNQUFyQixDQUE0QixVQUFDQyxHQUFELEVBQU1WLElBQU47QUFBQSwyQkFBZSxDQUFDVSxNQUFTQSxHQUFULFVBQW1CLEVBQXBCLElBQTBCVixLQUFLTCxRQUE5QztBQUFBLGlCQUE1QixFQUFvRixFQUFwRixDQURKO0FBRUFELDRCQUFZaUIscUJBQVosR0FBb0MsSUFBcEM7QUFDQWpCLDRCQUFZa0IsV0FBWixHQUEwQmYscUJBQXFCWSxNQUFyQixDQUE0QixVQUFDQyxHQUFELEVBQU1WLElBQU47QUFBQSwyQkFBZSxDQUFDVSxNQUFTQSxHQUFULGFBQXNCLEVBQXZCLEtBQzlEVixLQUFLTCxRQUR5RCxVQUM1Q0ssS0FBS0csWUFEdUMsU0FDdkJILEtBQUtJLGVBRGtCLEtBQ0dKLEtBQUtPLE9BQUwsVUFBb0JQLEtBQUtPLE9BQXpCLEdBQXFDLEVBRHhDLEtBQytDUCxLQUFLUSxjQUFMLFVBQTJCUixLQUFLUSxjQUFoQyxHQUFtRCxFQURsRyxDQUFmO0FBQUEsaUJBQTVCLEVBRXRCLEVBRnNCLENBQTFCO0FBR0gsYUF0QkQsTUFzQk87QUFDSCxvQkFBSUssVUFBYW5CLFlBQVlDLFFBQXpCLFdBQXVDRCxZQUFZUyxZQUFuRCxTQUFtRVQsWUFBWVUsZUFBbkY7QUFDQSxvQkFBSVYsWUFBWWEsT0FBWixJQUF1QmIsWUFBWWEsT0FBWixJQUF1QixNQUFsRCxFQUEwRDtBQUN0RE0sK0NBQXlCbkIsWUFBWWEsT0FBckM7QUFDSDs7QUFFRCxvQkFBSWIsWUFBWWMsY0FBWixJQUE4QmQsWUFBWWMsY0FBWixJQUE4QixNQUFoRSxFQUF3RTtBQUNwRUssc0RBQWdDbkIsWUFBWWMsY0FBNUM7QUFDSDs7QUFFRGQsNEJBQVlrQixXQUFaLEdBQTBCQyxPQUExQjtBQUNIO0FBQ0o7O0FBRUQsWUFBSUMsVUFBVTtBQUNWckIscUNBQXlCQTtBQURmLFNBQWQ7O0FBSUEsZUFBT3FCLE9BQVA7QUFDSDs7QUFFRHRCLFlBQVF1QixPQUFSLEdBQWtCLEVBQWxCOztBQUVBekIsWUFBUTBCLE1BQVIsQ0FBZSw0QkFBZixFQUE2QyxDQUFDLElBQUQsQ0FBN0MsRUFDS0YsT0FETCxDQUNhLG1CQURiLEVBQ2tDdEIsT0FEbEM7QUFFSCxDQXhEQSxFQXdEQ0gsTUF4REQsRUF3RFNBLE9BQU9DLE9BeERoQixFQXdEeUJELE9BQU80QixNQXhEaEMsQ0FBRCIsImZpbGUiOiI1NDYuanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gKHdpbmRvdywgYW5ndWxhciwgJCkge1xyXG4gICAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICAgIGZ1bmN0aW9uIFNlcnZpY2UoKSB7XHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIHBhcnNlVGhlTWVzc2FnZVR5cGVEYXRhKG1lc3NhZ2VUeXBlKSB7XHJcbiAgICAgICAgICAgIGlmICghbWVzc2FnZVR5cGUudHlwZU5hbWUpXHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcblxyXG4gICAgICAgICAgICBpZiAobWVzc2FnZVR5cGUudHlwZU5hbWUuaW5kZXhPZignOycpID4gMCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIG1lc3NhZ2VUeXBlSGllcmFyY2h5ID0gbWVzc2FnZVR5cGUudHlwZU5hbWUuc3BsaXQoJzsnKTtcclxuICAgICAgICAgICAgICAgIG1lc3NhZ2VUeXBlSGllcmFyY2h5ID0gbWVzc2FnZVR5cGVIaWVyYXJjaHkubWFwKChpdGVtKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIG9iaiA9IHt9O1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBzZWdtZW50cyA9IGl0ZW0uc3BsaXQoJywnKTtcclxuICAgICAgICAgICAgICAgICAgICBvYmoudHlwZU5hbWUgPSBzZWdtZW50c1swXTtcclxuICAgICAgICAgICAgICAgICAgICBvYmouYXNzZW1ibHlOYW1lID0gc2VnbWVudHNbMV07XHJcbiAgICAgICAgICAgICAgICAgICAgb2JqLmFzc2VtYmx5VmVyc2lvbiA9IHNlZ21lbnRzWzJdLnN1YnN0cmluZyhzZWdtZW50c1syXS5pbmRleE9mKCc9JykgKyAxKTtcclxuICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICBpZiAoIXNlZ21lbnRzWzRdLmVuZHNXaXRoKCc9bnVsbCcpKSB7IC8vU0MgbW9uaXRvcmluZyBmaWxscyBjdWx0dXJlIG9ubHkgaWYgUHVibGljS2V5VG9rZW4gaXMgZmlsbGVkXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG9iai5jdWx0dXJlID0gc2VnbWVudHNbM107XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG9iai5wdWJsaWNLZXlUb2tlbiA9IHNlZ21lbnRzWzRdO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gb2JqO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlVHlwZS5tZXNzYWdlVHlwZUhpZXJhcmNoeSA9IG1lc3NhZ2VUeXBlSGllcmFyY2h5O1xyXG4gICAgICAgICAgICAgICAgbWVzc2FnZVR5cGUudHlwZU5hbWUgPVxyXG4gICAgICAgICAgICAgICAgICAgIG1lc3NhZ2VUeXBlSGllcmFyY2h5LnJlZHVjZSgoc3VtLCBpdGVtKSA9PiAoc3VtID8gYCR7c3VtfSwgYCA6ICcnKSArIGl0ZW0udHlwZU5hbWUsICcnKTtcclxuICAgICAgICAgICAgICAgIG1lc3NhZ2VUeXBlLmNvbnRhaW5zVHlwZUhpZXJhcmNoeSA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlVHlwZS50b29sdGlwVGV4dCA9IG1lc3NhZ2VUeXBlSGllcmFyY2h5LnJlZHVjZSgoc3VtLCBpdGVtKSA9PiAoc3VtID8gYCR7c3VtfTxicj4gYCA6ICcnKSArXHJcbiAgICAgICAgICAgICAgICAgICAgYCR7aXRlbS50eXBlTmFtZX0gfCR7aXRlbS5hc3NlbWJseU5hbWV9LSR7aXRlbS5hc3NlbWJseVZlcnNpb259YCArIChpdGVtLmN1bHR1cmUgPyBgIHwke2l0ZW0uY3VsdHVyZX1gIDogJycpICsgKGl0ZW0ucHVibGljS2V5VG9rZW4gPyBgIHwke2l0ZW0ucHVibGljS2V5VG9rZW59YCA6ICcnKSxcclxuICAgICAgICAgICAgICAgICAgICAnJyk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgdG9vbHRpcCA9IGAke21lc3NhZ2VUeXBlLnR5cGVOYW1lfSB8ICR7bWVzc2FnZVR5cGUuYXNzZW1ibHlOYW1lfS0ke21lc3NhZ2VUeXBlLmFzc2VtYmx5VmVyc2lvbn1gO1xyXG4gICAgICAgICAgICAgICAgaWYgKG1lc3NhZ2VUeXBlLmN1bHR1cmUgJiYgbWVzc2FnZVR5cGUuY3VsdHVyZSAhPSAnbnVsbCcpIHtcclxuICAgICAgICAgICAgICAgICAgICB0b29sdGlwICs9IGAgfCBDdWx0dXJlPSR7bWVzc2FnZVR5cGUuY3VsdHVyZX1gO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIGlmIChtZXNzYWdlVHlwZS5wdWJsaWNLZXlUb2tlbiAmJiBtZXNzYWdlVHlwZS5wdWJsaWNLZXlUb2tlbiAhPSAnbnVsbCcpIHtcclxuICAgICAgICAgICAgICAgICAgICB0b29sdGlwICs9IGAgfCBQdWJsaWNLZXlUb2tlbj0ke21lc3NhZ2VUeXBlLnB1YmxpY0tleVRva2VufWA7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgbWVzc2FnZVR5cGUudG9vbHRpcFRleHQgPSB0b29sdGlwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgdmFyIHNlcnZpY2UgPSB7XHJcbiAgICAgICAgICAgIHBhcnNlVGhlTWVzc2FnZVR5cGVEYXRhOiBwYXJzZVRoZU1lc3NhZ2VUeXBlRGF0YVxyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHJldHVybiBzZXJ2aWNlO1xyXG4gICAgfVxyXG5cclxuICAgIFNlcnZpY2UuJGluamVjdCA9IFtdO1xyXG5cclxuICAgIGFuZ3VsYXIubW9kdWxlKCdzZXJ2aWNlcy5tZXNzYWdlVHlwZVBhcnNlcicsIFsnc2MnXSlcclxuICAgICAgICAuc2VydmljZSgnbWVzc2FnZVR5cGVQYXJzZXInLCBTZXJ2aWNlKTtcclxufSh3aW5kb3csIHdpbmRvdy5hbmd1bGFyLCB3aW5kb3cualF1ZXJ5KSk7XHJcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2FwcC9tb2R1bGVzL21vbml0b3JpbmcvanMvc2VydmljZXMvc2VydmljZXMubWVzc2FnZVR5cGVQYXJzZXIuanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///546\n");

/***/ }),

/***/ 547:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function (window, angular) {\n    'use strict';\n\n    function controller($scope, $routeParams, $location, $window, toastService, serviceControlService, monitoringService, historyPeriodsService, $filter, smallGraphsMinimumYAxis, largeGraphsMinimumYAxis, connectivityNotifier, messageTypeParser) {\n\n        $scope.endpointName = $routeParams.endpointName;\n        $scope.showInstancesBreakdown = $routeParams.tab === 'instancesBreakdown';\n        $scope.loading = true;\n        $scope.loadedSuccessfully = false;\n        $scope.largeGraphsMinimumYAxis = largeGraphsMinimumYAxis;\n        $scope.smallGraphsMinimumYAxis = smallGraphsMinimumYAxis;\n\n        var subscription;\n\n        $scope.periods = historyPeriodsService.getAllPeriods();\n        $scope.selectedPeriod = historyPeriodsService.getDefaultPeriod();\n\n        $scope.selectPeriod = function (period) {\n            $scope.selectedPeriod = period;\n            historyPeriodsService.saveSelectedPeriod(period);\n            updateUI();\n        };\n\n        monitoringService.isRemovingEndpointEnabled().then(function (enabled) {\n            $scope.isRemovingEndpointEnabled = enabled;\n        });\n\n        function mergeIn(destination, source, propertiesToSkip) {\n            for (var propName in source) {\n                if (Object.prototype.hasOwnProperty.call(source, propName)) {\n                    if (!propertiesToSkip || !propertiesToSkip.includes(propName)) {\n                        destination[propName] = source[propName];\n                    }\n                }\n            }\n        }\n\n        $scope.buildUrl = function (selectedPeriodValue, showInstacesBreakdown, breakdownPageNo) {\n\n            var breakdownTabName = showInstacesBreakdown ? 'instancesBreakdown' : 'messageTypeBreakdown';\n\n            return '#/monitoring/endpoint/' + $scope.endpointName + '?historyPeriod=' + selectedPeriodValue + '&tab=' + breakdownTabName + '&pageNo=' + breakdownPageNo;\n        };\n\n        $scope.updateUrl = function () {\n\n            var updatedUrl = $scope.buildUrl($scope.selectedPeriod.value, $scope.showInstancesBreakdown, $scope.endpoint.messageTypesPage);\n\n            $window.location.hash = updatedUrl;\n        };\n\n        $scope.showInstancesBreakdownTab = function (isVisible) {\n            $scope.showInstancesBreakdown = isVisible;\n\n            $scope.endpoint.refreshMessageTypes();\n        };\n\n        $scope.removeEndpoint = function (endpointName, instance) {\n            instance.busy = true;\n            monitoringService.removeEndpointInstance(endpointName, instance.id).then(function () {\n                $scope.endpoint.instances.splice($scope.endpoint.instances.indexOf(instance), 1);\n\n                if ($scope.endpoint.instances.length === 0) {\n                    $window.location.hash = '#/monitoring';\n                }\n            }, function () {\n                instance.busy = false;\n            });\n        };\n\n        $scope.endpoint = {\n            messageTypesPage: !$scope.showInstancesBreakdown ? $routeParams.pageNo : 1,\n            messageTypesTotalItems: 0,\n            messageTypesItemsPerPage: 10,\n            messageTypesAvailable: false,\n            messageTypesUpdatedSet: [],\n            refreshMessageTypes: function refreshMessageTypes() {\n                if ($scope.endpoint.messageTypesAvailable) {\n                    $scope.endpoint.messageTypesAvailable = false;\n\n                    $scope.endpoint.messageTypes = $scope.endpoint.messageTypesUpdatedSet;\n                    $scope.endpoint.messageTypesUpdatedSet = null;\n\n                    processMessageTypes();\n                }\n            }\n        };\n\n        function processMessageTypes() {\n\n            $scope.endpoint.messageTypesTotalItems = $scope.endpoint.messageTypes.length;\n\n            $scope.endpoint.messageTypes.forEach(function (messageType) {\n                fillDisplayValues(messageType);\n                messageTypeParser.parseTheMessageTypeData(messageType);\n            });\n        }\n\n        function updateUI() {\n            if (subscription) {\n                subscription.dispose();\n            }\n\n            var selectedPeriod = $scope.selectedPeriod;\n\n            subscription = monitoringService.createEndpointDetailsSource($routeParams.endpointName, selectedPeriod.value, selectedPeriod.refreshInterval).subscribe(function (endpoint) {\n\n                $scope.loading = false;\n\n                if (endpoint.error) {\n                    connectivityNotifier.reportFailedConnection();\n                    if ($scope.endpoint && $scope.endpoint.instances) {\n                        $scope.endpoint.instances.forEach(function (item) {\n                            return item.isScMonitoringDisconnected = true;\n                        });\n                    }\n\n                    $scope.endpoint.isScMonitoringDisconnected = true;\n                } else {\n\n                    if ($scope.endpoint.messageTypesTotalItems > 0 && $scope.endpoint.messageTypesTotalItems !== endpoint.messageTypes.length) {\n\n                        mergeIn($scope.endpoint, endpoint, ['messageTypes']);\n\n                        $scope.endpoint.messageTypesAvailable = true;\n                        $scope.endpoint.messageTypesUpdatedSet = endpoint.messageTypes;\n                    } else {\n                        mergeIn($scope.endpoint, endpoint);\n                    }\n\n                    connectivityNotifier.reportSuccessfulConnection();\n\n                    $scope.endpoint.instances.sort(function (first, second) {\n                        if (first.id < second.id) {\n                            return -1;\n                        }\n\n                        if (first.id > second.id) {\n                            return 1;\n                        }\n\n                        return 0;\n                    });\n\n                    processMessageTypes();\n\n                    $scope.endpoint.isStale = true;\n                    $scope.endpoint.isScMonitoringDisconnected = false;\n\n                    $scope.endpoint.instances.forEach(function (instance) {\n                        fillDisplayValues(instance);\n                        serviceControlService.getExceptionGroupsForEndpointInstance(instance.id).then(function (result) {\n                            if (result.data.length > 0) {\n                                instance.serviceControlId = result.data[0].id;\n                                instance.errorCount = result.data[0].count;\n                            }\n                        }, function (err) {\n                            // Warn user?\n                        });\n                        $scope.endpoint.isStale = $scope.endpoint.isStale && instance.isStale;\n                    });\n\n                    $scope.loadedSuccessfully = true;\n                }\n\n                serviceControlService.getExceptionGroupsForLogicalEndpoint($scope.endpointName).then(function (result) {\n                    if (result.data.length > 0) {\n                        $scope.endpoint.serviceControlId = result.data[0].id;\n                        $scope.endpoint.errorCount = result.data[0].count;\n                    }\n                });\n            });\n        }\n\n        function fillDisplayValues(instance) {\n            $filter('graphduration')(instance.metrics.processingTime);\n            $filter('graphduration')(instance.metrics.criticalTime);\n            $filter('graphdecimal')(instance.metrics.throughput, 2);\n            $filter('graphdecimal')(instance.metrics.retries, 2);\n        }\n\n        $scope.$on(\"$destroy\", function handler() {\n            subscription.dispose();\n        });\n\n        updateUI();\n    }\n\n    controller.$inject = ['$scope', '$routeParams', '$location', '$window', 'toastService', 'serviceControlService', 'monitoringService', 'historyPeriodsService', '$filter', 'smallGraphsMinimumYAxis', 'largeGraphsMinimumYAxis', 'connectivityNotifier', 'messageTypeParser'];\n\n    angular.module('endpoint_details').controller('endpointDetailsCtrl', controller);\n})(window, window.angular);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///547\n");

/***/ }),

/***/ 548:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function (window, angular) {\n    'use strict';\n\n    function routeProvider($routeProvider) {\n        var template = __webpack_require__(549);\n\n        $routeProvider.when('/monitoring/endpoint/:endpointName', {\n            data: {\n                pageTitle: 'Endpoint Details'\n            },\n            template: template,\n            controller: 'endpointDetailsCtrl',\n            controllerAs: 'vm',\n            reloadOnSearch: false\n        });\n    }\n\n    routeProvider.$inject = ['$routeProvider'];\n\n    angular.module('endpoint_details').config(routeProvider);\n})(window, window.angular);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL2VuZHBvaW50X2RldGFpbHMucm91dGUuanM/NjViNiJdLCJuYW1lcyI6WyJ3aW5kb3ciLCJhbmd1bGFyIiwicm91dGVQcm92aWRlciIsIiRyb3V0ZVByb3ZpZGVyIiwidGVtcGxhdGUiLCJyZXF1aXJlIiwid2hlbiIsImRhdGEiLCJwYWdlVGl0bGUiLCJjb250cm9sbGVyIiwiY29udHJvbGxlckFzIiwicmVsb2FkT25TZWFyY2giLCIkaW5qZWN0IiwibW9kdWxlIiwiY29uZmlnIl0sIm1hcHBpbmdzIjoiOztBQUFDLFdBQVVBLE1BQVYsRUFBa0JDLE9BQWxCLEVBQTJCO0FBQ3hCOztBQUVBLGFBQVNDLGFBQVQsQ0FBdUJDLGNBQXZCLEVBQXVDO0FBQ25DLFlBQUlDLFdBQVdDLG1CQUFPQSxDQUFDLEdBQVIsQ0FBZjs7QUFFQUYsdUJBQWVHLElBQWYsQ0FBb0Isb0NBQXBCLEVBQTBEO0FBQ3REQyxrQkFBTTtBQUNGQywyQkFBVztBQURULGFBRGdEO0FBSXRESixzQkFBVUEsUUFKNEM7QUFLdERLLHdCQUFZLHFCQUwwQztBQU10REMsMEJBQWMsSUFOd0M7QUFPdERDLDRCQUFnQjtBQVBzQyxTQUExRDtBQVNIOztBQUVEVCxrQkFBY1UsT0FBZCxHQUF3QixDQUNwQixnQkFEb0IsQ0FBeEI7O0FBSUFYLFlBQVFZLE1BQVIsQ0FBZSxrQkFBZixFQUNLQyxNQURMLENBQ1laLGFBRFo7QUFFSCxDQXZCQSxFQXVCRUYsTUF2QkYsRUF1QlVBLE9BQU9DLE9BdkJqQixDQUFEIiwiZmlsZSI6IjU0OC5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiAod2luZG93LCBhbmd1bGFyKSB7XHJcbiAgICAndXNlIHN0cmljdCc7XHJcblxyXG4gICAgZnVuY3Rpb24gcm91dGVQcm92aWRlcigkcm91dGVQcm92aWRlcikge1xyXG4gICAgICAgIGxldCB0ZW1wbGF0ZSA9IHJlcXVpcmUoJy4vLi4vdmlld3MvZW5kcG9pbnRfZGV0YWlscy5odG1sJyk7XHJcblxyXG4gICAgICAgICRyb3V0ZVByb3ZpZGVyLndoZW4oJy9tb25pdG9yaW5nL2VuZHBvaW50LzplbmRwb2ludE5hbWUnLCB7XHJcbiAgICAgICAgICAgIGRhdGE6IHtcclxuICAgICAgICAgICAgICAgIHBhZ2VUaXRsZTogJ0VuZHBvaW50IERldGFpbHMnXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHRlbXBsYXRlOiB0ZW1wbGF0ZSxcclxuICAgICAgICAgICAgY29udHJvbGxlcjogJ2VuZHBvaW50RGV0YWlsc0N0cmwnLFxyXG4gICAgICAgICAgICBjb250cm9sbGVyQXM6ICd2bScsXHJcbiAgICAgICAgICAgIHJlbG9hZE9uU2VhcmNoOiBmYWxzZVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHJvdXRlUHJvdmlkZXIuJGluamVjdCA9IFtcclxuICAgICAgICAnJHJvdXRlUHJvdmlkZXInXHJcbiAgICBdO1xyXG5cclxuICAgIGFuZ3VsYXIubW9kdWxlKCdlbmRwb2ludF9kZXRhaWxzJylcclxuICAgICAgICAuY29uZmlnKHJvdXRlUHJvdmlkZXIpO1xyXG59ICh3aW5kb3csIHdpbmRvdy5hbmd1bGFyKSk7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vYXBwL21vZHVsZXMvbW9uaXRvcmluZy9qcy9lbmRwb2ludF9kZXRhaWxzLnJvdXRlLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///548\n");

/***/ }),

/***/ 549:
/***/ (function(module, exports) {

eval("module.exports = \"<platform-trial-expired ng-if=isPlatformTrialExpired></platform-trial-expired> <platform-expired ng-if=isPlatformExpired></platform-expired> <upgrade-protection-expired ng-if=isInvalidDueToUpgradeProtectionExpired></upgrade-protection-expired> <div class=container ng-if=\\\"!isPlatformTrialExpired && !isPlatformExpired && !isInvalidDueToUpgradeProtectionExpired\\\"> <div class=sp-loader ng-if=loading></div> <div ng-include=\\\"'modules/monitoring/views/monitoring_not_available.html'\\\" ng-if=\\\"!loading && !loadedSuccessfully\\\"></div> <div class=\\\"row monitoring-head\\\" ng-if=loadedSuccessfully> <div class=\\\"col-xs-9 no-side-padding list-section\\\"> <h1 class=\\\"righ-side-ellipsis col-lg-max-10\\\" uib-tooltip={{endpointName}}> {{endpointName}} </h1> <div class=\\\"endpoint-status col-xs-2\\\"> <span ng-if=endpoint.isStale class=warning> <i class=\\\"fa pa-endpoint-lost endpoint-details\\\" uib-tooltip=\\\"Unable to connect to endpoint\\\"></i> </span> <span class=warning ng-if=endpoint.isScMonitoringDisconnected> <i class=\\\"fa pa-monitoring-lost endpoint-details\\\" uib-tooltip=\\\"Unable to connect to monitoring server\\\"></i> </span> <a ng-if=endpoint.errorCount class=warning href=#/failed-messages/groups/{{endpoint.serviceControlId}}> <i class=\\\"fa fa-envelope\\\" uib-tooltip=\\\"{{endpoint.errorCount | metricslargenumber}} failed messages associated with this endpoint. Click to see list.\\\"></i> <span class=\\\"badge badge-important ng-binding\\\">{{endpoint.errorCount | metricslargenumber}}</span> </a> </div> </div> <div class=\\\"col-xs-3 no-side-padding toolbar-menus\\\"> <ul class=\\\"nav nav-pills period-selector\\\"> <li role=presentation ng-repeat=\\\"period in periods\\\" ng-class=\\\"(period.value == selectedPeriod.value ? 'active' : 'notselected')\\\"> <a ng-click=selectPeriod(period) ng-href=\\\"{{buildUrl(period.value, showInstancesBreakdown, showInstacesBreakdown ? 1 : endpoint.messageTypesPage)}}\\\" uib-tooltip={{period.refreshIntervalText}}.>{{period.text}}</a> </li> </ul> </div> </div> </div> <div class=\\\"container large-graphs\\\" ng-if=\\\"loadedSuccessfully && !isPlatformTrialExpired && !isPlatformExpired && !isInvalidDueToUpgradeProtectionExpired\\\"> <div class=container> <div class=row> <div class=\\\"col-xs-4 no-side-padding list-section graph-area graph-queue-length\\\"> <large-graph ng-if=endpoint.metricDetails.metrics.queueLength first-data-series=endpoint.metricDetails.metrics.queueLength minimum-yaxis={{largeGraphsMinimumYAxis.queueLength}} plot-width=750 plot-height=200 first-series-color=#EA7E00 first-series-fill-color=#EADDCE class=\\\"large-graph pull-left\\\"> </large-graph> <div class=\\\"col-xs-12 no-side-padding graph-values\\\"> <div class=queue-length-values> <div class=row> <span class=metric-digest-header uib-tooltip=\\\"Queue length: The number of messages waiting to be processed in the input queue(s) of the endpoint.\\\"> Queue Length </span> </div> </div> <div class=\\\"row metric-digest-value current\\\"> <div ng-if=\\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\\"> {{endpoint.digest.metrics.queueLength.latest | metricslargenumber:0}} <span ng-if=\\\"endpoint.isStale == false || endpoint.isScMonitoringDisconnected == false\\\" class=metric-digest-value-suffix>MSGS</span> </div> <strong ng-if=\\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\\">?</strong> </div> <div class=\\\"row metric-digest-value average\\\"> <div ng-if=\\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\\"> {{endpoint.digest.metrics.queueLength.average | metricslargenumber:0}} <span class=metric-digest-value-suffix>MSGS</span> </div> <strong ng-if=\\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\\">?</strong> <span ng-if=\\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\\" class=metric-digest-value-suffix> AVG</span> </div> </div> </div> <div class=\\\"col-xs-4 no-side-padding list-section graph-area graph-message-retries-throughputs\\\"> <large-graph ng-if=endpoint.metricDetails.metrics.throughput first-data-series=endpoint.metricDetails.metrics.throughput second-data-series=endpoint.metricDetails.metrics.retries minimum-yaxis={{largeGraphsMinimumYAxis.throughputRetries}} plot-width=750 plot-height=200 first-series-color=#176397 first-series-fill-color=#CADCE8 second-series-color=#CC1252 second-series-fill-color=#E9C4D1 class=\\\"large-graph pull-left\\\"> </large-graph> <div class=\\\"col-xs-12 no-side-padding graph-values\\\"> <div class=\\\"col-xs-6 no-side-padding throughput-values\\\"> <div class=row> <span class=metric-digest-header uib-tooltip=\\\"Throughput: The number of messages per second successfully processed by a receiving endpoint.\\\"> Throughput </span> </div> <div class=\\\"row metric-digest-value current\\\"> <div ng-if=\\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\\"> {{endpoint.digest.metrics.throughput.latest | metricslargenumber:2}} <span class=metric-digest-value-suffix>MSGS/S</span> </div> <strong ng-if=\\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\\">?</strong> </div> <div class=\\\"row metric-digest-value average\\\"> <div ng-if=\\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\\"> {{endpoint.digest.metrics.throughput.average | metricslargenumber:2}} <span class=metric-digest-value-suffix>MSGS/S</span> </div> <strong ng-if=\\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\\">?</strong> <span ng-if=\\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\\" class=metric-digest-value-suffix> AVG</span> </div> </div> <div class=\\\"col-xs-6 no-side-padding scheduled-retries-rate-values\\\"> <div class=row> <span class=metric-digest-header uib-tooltip=\\\"Scheduled retry rate: The number of messages per second scheduled for retries (immediate or delayed).\\\"> Scheduled Retries Rate </span> </div> <div class=\\\"row metric-digest-value current\\\"> <div ng-if=\\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\\"> {{endpoint.digest.metrics.retries.latest | metricslargenumber:2}} <span class=metric-digest-value-suffix>MSGS/S</span> </div> <strong ng-if=\\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\\">?</strong> </div> <div class=\\\"row metric-digest-value average\\\"> <div ng-if=\\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\\"> {{endpoint.digest.metrics.retries.average | metricslargenumber:2}} <span class=metric-digest-value-suffix>MSGS/S</span> </div> <strong ng-if=\\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\\">?</strong> <span ng-if=\\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\\" class=metric-digest-value-suffix> AVG</span> </div> </div> </div> </div> <div class=\\\"col-xs-4 no-side-padding list-section graph-area graph-critical-processing-times\\\"> <large-graph ng-if=endpoint.metricDetails.metrics.processingTime first-data-series=endpoint.metricDetails.metrics.criticalTime second-data-series=endpoint.metricDetails.metrics.processingTime minimum-yaxis={{largeGraphsMinimumYAxis.processingCritical}} plot-width=750 plot-height=200 first-series-color=#2700CB first-series-fill-color=#C4BCE5 second-series-color=#258135 second-series-fill-color=#BEE6C5 is-duration-graph=true class=\\\"large-graph pull-left\\\"> </large-graph> <div class=\\\"col-xs-12 no-side-padding graph-values\\\"> <div class=\\\"col-xs-6 no-side-padding processing-time-values\\\"> <div class=row> <span class=metric-digest-header uib-tooltip=\\\"Processing time: The time taken for a receiving endpoint to successfully process a message.\\\"> Processing Time </span> </div> <div class=\\\"row metric-digest-value current\\\"> <div ng-if=\\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\\"> {{endpoint.digest.metrics.processingTime.latest | durationValue}} <span class=metric-digest-value-suffix>{{endpoint.digest.metrics.processingTime.latest | durationUnit}}</span> </div> <strong ng-if=\\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\\">?</strong> </div> <div class=\\\"row metric-digest-value average\\\"> <div ng-if=\\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\\"> {{endpoint.digest.metrics.processingTime.average | durationValue}} <span class=metric-digest-value-suffix>{{endpoint.digest.metrics.processingTime.average | durationUnit}}</span> </div> <strong ng-if=\\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\\">?</strong> <span ng-if=\\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\\" class=metric-digest-value-suffix> AVG</span> </div> </div> <div class=\\\"col-xs-6 no-side-padding critical-time-values\\\"> <div class=row> <span class=metric-digest-header uib-tooltip=\\\"Critical time: The elapsed time from when a message was sent, until it was successfully processed by a receiving endpoint.\\\"> Critical Time </span> </div> <div class=\\\"row metric-digest-value current\\\"> <div ng-if=\\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\\"> {{endpoint.digest.metrics.criticalTime.latest | durationValue}} <span class=metric-digest-value-suffix>{{endpoint.digest.metrics.criticalTime.latest | durationUnit}}</span> </div> <strong ng-if=\\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\\">?</strong> </div> <div class=\\\"row metric-digest-value average\\\"> <div ng-if=\\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\\"> {{endpoint.digest.metrics.criticalTime.average | durationValue}} <span class=metric-digest-value-suffix>{{endpoint.digest.metrics.criticalTime.average | durationUnit}} </span> </div> <strong ng-if=\\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\\">?</strong> <span ng-if=\\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\\" class=metric-digest-value-suffix> AVG</span> </div> </div> </div> </div> </div> </div> </div> <div class=container ng-if=\\\"loadedSuccessfully && !isPlatformTrialExpired && !isPlatformExpired && !isInvalidDueToUpgradeProtectionExpired\\\"> <div class=tabs> <h5 ng-class=\\\"{active: !showInstancesBreakdown}\\\"> <a ng-click=showInstancesBreakdownTab(false) ng-href=\\\"{{buildUrl(selectedPeriod.value, showInstancesBreakdown, endpoint.messageTypesPage)}}\\\" class=ng-binding>Message Types ({{endpoint.messageTypes.length}})</a> </h5> <h5 ng-class=\\\"{active: showInstancesBreakdown}\\\"> <a ng-click=showInstancesBreakdownTab(true) ng-href=\\\"{{buildUrl(selectedPeriod.value, showInstancesBreakdown, 1)}}\\\" class=ng-binding>Instances ({{endpoint.instances.length}})</a> </h5> </div> <section ng-if=showInstancesBreakdown class=endpoint-instances> <div class=row> <div class=\\\"col-xs-12 no-side-padding\\\"> <div ng-show=loadedSuccessfully class=\\\"row box box-no-click table-head-row\\\"> <div class=\\\"col-xs-4 col-xl-8\\\"> <div class=\\\"row box-header\\\"> <div class=col-xs-12> Instance Name </div> </div> </div> <div class=\\\"col-xs-2 col-xl-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=\\\"col-xs-12 no-side-padding\\\" uib-tooltip=\\\"Throughput: The number of messages per second successfully processed by a receiving endpoint.\\\"> Throughput <span class=table-header-unit>(msgs/s)</span> </div> </div> </div> <div class=\\\"col-xs-2 col-xl-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=\\\"col-xs-12 no-side-padding\\\" uib-tooltip=\\\"Scheduled retry rate: The number of messages per second scheduled for retries (immediate or delayed).\\\"> Scheduled retry rate <span class=table-header-unit>(msgs/s)</span> </div> </div> </div> <div class=\\\"col-xs-2 col-xl-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=\\\"col-xs-12 no-side-padding\\\" uib-tooltip=\\\"Processing time: The time taken for a receiving endpoint to successfully process a message.\\\"> Processing Time <span class=table-header-unit>(t)</span> </div> </div> </div> <div class=\\\"col-xs-2 col-xl-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=\\\"col-xs-12 no-side-padding\\\" uib-tooltip=\\\"Critical time: The elapsed time from when a message was sent, until it was successfully processed by a receiving endpoint.\\\"> Critical Time <span class=table-header-unit>(t)</span> </div> </div> </div> </div> <no-data ng-show=\\\"endpoint.instances.length == 0\\\" message=\\\"No messages processed in this period of time.\\\"></no-data> <div class=row> <div class=\\\"col-xs-12 no-side-padding\\\"> <div class=\\\"row box endpoint-row\\\" ng-repeat=\\\"instance in endpoint.instances\\\"> <div class=\\\"col-xs-12 no-side-padding\\\"> <div class=row> <div class=\\\"col-xs-4 col-xl-8 endpoint-name\\\"> <div class=\\\"row box-header\\\"> <div class=\\\"col-lg-max-9 no-side-padding lead righ-side-ellipsis\\\" uib-tooltip={{instance.name}}> {{instance.name}} </div> <div class=\\\"col-lg-4 no-side-padding endpoint-status\\\"> <span class=warning ng-if=instance.isScMonitoringDisconnected> <i class=\\\"fa pa-monitoring-lost endpoint-details\\\" uib-tooltip=\\\"Unable to connect to monitoring server\\\"></i> </span> <span class=warning ng-if=instance.isStale> <i class=\\\"fa pa-endpoint-lost endpoint-details\\\" uib-tooltip=\\\"Unable to connect to instance\\\"></i> </span> <span class=warning ng-if=instance.errorCount> <a ng-if=instance.errorCount class=\\\"warning btn\\\" href=#/failed-messages/groups/{{instance.serviceControlId}}> <i class=\\\"fa fa-envelope\\\" uib-tooltip=\\\"{{instance.errorCount | metricslargenumber}} failed messages associated with this endpoint. Click to see list.\\\"></i> <span class=\\\"badge badge-important ng-binding\\\">{{instance.errorCount | metricslargenumber}}</span> </a> </span> </div> </div> </div> <div class=\\\"col-xs-2 col-xl-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=no-side-padding> <graph plot-data=instance.metrics.throughput minimum-yaxis={{smallGraphsMinimumYAxis.throughput}} class=\\\"graph throughput pull-left\\\"></graph> </div> <div class=\\\"no-side-padding sparkline-value\\\"> {{(instance.isStale == true || instance.isScMonitoringDisconnected == true) ? \\\"\\\" : instance.metrics.throughput.displayValue}} <strong ng-if=\\\"instance.isStale || instance.isScMonitoringDisconnected\\\">?</strong> </div> </div> </div> <div class=\\\"col-xs-2 col-xl-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=no-side-padding> <graph plot-data=instance.metrics.retries minimum-yaxis={{smallGraphsMinimumYAxis.retries}} class=\\\"graph retries pull-left\\\"></graph> </div> <div class=\\\"no-side-padding sparkline-value\\\"> {{(instance.isStale == true || instance.isScMonitoringDisconnected == true) ? \\\"\\\" : instance.metrics.retries.displayValue}} <strong ng-if=\\\"instance.isStale || instance.isScMonitoringDisconnected\\\">?</strong> </div> </div> </div> <div class=\\\"col-xs-2 col-xl-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=no-side-padding> <graph plot-data=instance.metrics.processingTime minimum-yaxis={{smallGraphsMinimumYAxis.processingTime}} class=\\\"graph processing-time pull-left\\\"></graph> </div> <div class=\\\"no-side-padding sparkline-value\\\" ng-class=instance.metrics.processingTime.displayValue.unit> {{(instance.isStale == true || instance.isScMonitoringDisconnected == true) ? \\\"\\\" : instance.metrics.processingTime.displayValue.value}} <strong ng-if=\\\"instance.isStale || instance.isScMonitoringDisconnected\\\">?</strong> <span ng-if=\\\"instance.isStale == false && instance.isScMonitoringDisconnected == false\\\" class=unit> {{instance.metrics.processingTime.displayValue.unit}} </span> </div> </div> </div> <div class=\\\"col-xs-2 col-xl-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=no-side-padding> <graph plot-data=instance.metrics.criticalTime minimum-yaxis={{smallGraphsMinimumYAxis.criticalTime}} class=\\\"graph critical-time pull-left\\\"></graph> </div> <div class=\\\"no-side-padding sparkline-value\\\" ng-class=instance.metrics.criticalTime.displayValue.unit> {{(instance.isStale == true || instance.isScMonitoringDisconnected == true) ? \\\"\\\" : instance.metrics.criticalTime.displayValue.value}} <strong ng-if=\\\"instance.isStale || instance.isScMonitoringDisconnected\\\">?</strong> <span ng-if=\\\"instance.isStale == false && instance.isScMonitoringDisconnected == false\\\" class=unit> {{instance.metrics.criticalTime.displayValue.unit}} </span> </div> </div> </div> <a ng-if=isRemovingEndpointEnabled ng-show=instance.isStale class=remove-endpoint ng-click=\\\"removeEndpoint(endpointName, instance)\\\"><i class=\\\"fa fa-trash\\\" uib-tooltip=\\\"Remove endpoint\\\"></i></a> </div> </div> </div> </div> </div> </div> </div> </section> <section ng-if=!showInstancesBreakdown class=endpoint-message-types> <div class=row> <div class=\\\"col-xs-12 no-side-padding\\\"> <message-types-change-indicator refresh=endpoint.refreshMessageTypes message-types-available=endpoint.messageTypesAvailable></message-types-change-indicator> <div ng-show=loadedSuccessfully class=\\\"row box box-no-click table-head-row\\\"> <div class=\\\"col-xs-4 col-xl-8\\\"> <div class=\\\"row box-header\\\"> <div class=col-xs-12> Message type name </div> </div> </div> <div class=\\\"col-xs-2 col-xl-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=\\\"col-xs-12 no-side-padding\\\" uib-tooltip=\\\"Throughput: The number of messages per second successfully processed by a receiving endpoint.\\\"> Throughput <span class=table-header-unit>(msgs/s)</span> </div> </div> </div> <div class=\\\"col-xs-2 col-xl-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=\\\"col-xs-12 no-side-padding\\\" uib-tooltip=\\\"Scheduled retry rate: The number of messages per second scheduled for retries (immediate or delayed).\\\"> Scheduled retry rate <span class=table-header-unit>(msgs/s)</span> </div> </div> </div> <div class=\\\"col-xs-2 col-xl-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=\\\"col-xs-12 no-side-padding\\\" uib-tooltip=\\\"Processing time: The time taken for a receiving endpoint to successfully process a message.\\\"> Processing Time <span class=table-header-unit>(t)</span> </div> </div> </div> <div class=\\\"col-xs-2 col-xl-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=\\\"col-xs-12 no-side-padding\\\" uib-tooltip=\\\"Critical time: The elapsed time from when a message was sent, until it was successfully processed by a receiving endpoint.\\\"> Critical Time <span class=table-header-unit>(t)</span> </div> </div> </div> </div> <no-data ng-show=\\\"endpoint.messageTypes.length == 0\\\" message=\\\"No messages processed in this period of time.\\\"></no-data> <div class=row> <div class=\\\"col-xs-12 no-side-padding\\\"> <div class=\\\"row box endpoint-row\\\" ng-repeat=\\\"messageType in endpoint.messageTypes | orderBy: 'typeName' | limitTo: endpoint.messageTypesItemsPerPage : (endpoint.messageTypesPage-1) * endpoint.messageTypesItemsPerPage\\\"> <div class=\\\"col-xs-12 no-side-padding\\\"> <div class=row> <div class=\\\"col-xs-4 col-xl-8 endpoint-name\\\" uib-tooltip-html=messageType.tooltipText> <div class=\\\"row box-header\\\"> <div class=\\\"col-lg-max-9 no-side-padding lead message-type-label righ-side-ellipsis\\\"> <div class=lead> {{messageType.typeName ? messageType.typeName : 'Unknown'}} </div> </div> <div class=\\\"col-lg-4 no-side-padding endpoint-status message-type-status\\\"> <span class=warning ng-if=endpoint.isScMonitoringDisconnected> <i class=\\\"fa pa-monitoring-lost endpoint-details\\\" uib-tooltip=\\\"Unable to connect to monitoring server\\\"></i> </span> </div> </div> <div class=\\\"row message-type-properties\\\"> <div ng-show=\\\"{{messageType.typeName && messageType.typeName != 'null' && !messageType.containsTypeHierarchy}}\\\" class=message-type-part> {{messageType.assemblyName + '-' + messageType.assemblyVersion}} </div> <div ng-show=\\\"{{messageType.typeName && messageType.typeName != 'null' && messageType.containsTypeHierarchy}}\\\" class=message-type-part ng-repeat=\\\"type in messageType.messageTypeHierarchy\\\"> {{type.assemblyName + '-' + type.assemblyVersion}} </div> <div ng-show=\\\"{{messageType.culture && messageType.culture != 'null'}}\\\" class=message-type-part>{{'Culture=' + messageType.culture}}</div> <div ng-show=\\\"{{messageType.publicKeyToken && messageType.publicKeyToken != 'null'}}\\\" class=message-type-part>{{'PublicKeyToken=' + messageType.publicKeyToken}}</div> </div> </div> <div class=\\\"col-xs-2 col-xl-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=no-side-padding> <graph plot-data=messageType.metrics.throughput minimum-yaxis={{smallGraphsMinimumYAxis.throughput}} class=\\\"graph throughput pull-left\\\"></graph> </div> <div class=\\\"no-side-padding sparkline-value\\\"> {{(endpoint.isStale == true || endpoint.isScMonitoringDisconnected == true) ? \\\"\\\" : messageType.metrics.throughput.displayValue}} <strong ng-if=\\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\\">?</strong> </div> </div> </div> <div class=\\\"col-xs-2 col-xl-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=no-side-padding> <graph plot-data=messageType.metrics.retries minimum-yaxis={{smallGraphsMinimumYAxis.retries}} class=\\\"graph retries pull-left\\\"></graph> </div> <div class=\\\"no-side-padding sparkline-value\\\"> {{(endpoint.isStale == true || endpoint.isScMonitoringDisconnected == true) ? \\\"\\\" : messageType.metrics.retries.displayValue}} <strong ng-if=\\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\\">?</strong> </div> </div> </div> <div class=\\\"col-xs-2 col-xl-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=no-side-padding> <graph plot-data=messageType.metrics.processingTime minimum-yaxis={{smallGraphsMinimumYAxis.processingTime}} class=\\\"graph processing-time pull-left\\\"></graph> </div> <div class=\\\"no-side-padding sparkline-value\\\" ng-class=messageType.metrics.processingTime.displayValue.unit> {{(endpoint.isStale == true || endpoint.isScMonitoringDisconnected == true) ? \\\"\\\" : messageType.metrics.processingTime.displayValue.value}} <strong ng-if=\\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\\">?</strong> <span ng-if=\\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\\" class=unit> {{messageType.metrics.processingTime.displayValue.unit}} </span> </div> </div> </div> <div class=\\\"col-xs-2 col-xl-1 no-side-padding\\\"> <div class=\\\"row box-header\\\"> <div class=no-side-padding> <graph plot-data=messageType.metrics.criticalTime minimum-yaxis={{smallGraphsMinimumYAxis.criticalTime}} class=\\\"graph critical-time pull-left\\\"></graph> </div> <div class=\\\"no-side-padding sparkline-value\\\" ng-class=messageType.metrics.criticalTime.displayValue.unit> {{(endpoint.isStale == true || endpoint.isScMonitoringDisconnected == true) ? \\\"\\\" : messageType.metrics.criticalTime.displayValue.value}} <strong ng-if=\\\"endpoint.isStale || endpoint.isScMonitoringDisconnected\\\">?</strong> <span ng-if=\\\"endpoint.isStale == false && endpoint.isScMonitoringDisconnected == false\\\" class=unit> {{messageType.metrics.criticalTime.displayValue.unit}} </span> </div> </div> </div> </div> </div> </div> </div> </div> <div class=\\\"row list-pagination\\\"> <ul uib-pagination ng-show=\\\"endpoint.messageTypesTotalItems >  endpoint.messageTypesItemsPerPage\\\" total-items=endpoint.messageTypesTotalItems ng-model=endpoint.messageTypesPage items-per-page=endpoint.messageTypesItemsPerPage max-size=10 boundary-link-numbers=true ng-change=updateUrl()></ul> </div> </div> </div> </section> </div>\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///549\n");

/***/ }),

/***/ 550:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function (window, angular) {\n    'use strict';\n\n    angular.module('ui.particular.duration', []).filter('duration', ['formatter', function (formatter) {\n        return function (input) {\n            var time = formatter.formatTime(input);\n            return time.value + ' ' + time.unit;\n        };\n    }]).filter('durationValue', ['formatter', function (formatter) {\n        return function (input) {\n            return formatter.formatTime(input).value;\n        };\n    }]).filter('durationUnit', ['formatter', function (formatter) {\n        return function (input) {\n            return formatter.formatTime(input).unit;\n        };\n    }]);\n})(window, window.angular);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL2RpcmVjdGl2ZXMvdWkucGFydGljdWxhci5kdXJhdGlvbi5qcz85YjhlIl0sIm5hbWVzIjpbIndpbmRvdyIsImFuZ3VsYXIiLCJtb2R1bGUiLCJmaWx0ZXIiLCJmb3JtYXR0ZXIiLCJpbnB1dCIsInRpbWUiLCJmb3JtYXRUaW1lIiwidmFsdWUiLCJ1bml0Il0sIm1hcHBpbmdzIjoiOztBQUFDLFdBQVVBLE1BQVYsRUFBa0JDLE9BQWxCLEVBQTJCO0FBQ3hCOztBQUVBQSxZQUFRQyxNQUFSLENBQWUsd0JBQWYsRUFBeUMsRUFBekMsRUFDS0MsTUFETCxDQUNZLFVBRFosRUFDd0IsQ0FBQyxXQUFELEVBQWMsVUFBVUMsU0FBVixFQUFxQjtBQUNuRCxlQUFPLFVBQVVDLEtBQVYsRUFBaUI7QUFDcEIsZ0JBQUlDLE9BQU9GLFVBQVVHLFVBQVYsQ0FBcUJGLEtBQXJCLENBQVg7QUFDQSxtQkFBVUMsS0FBS0UsS0FBZixTQUF3QkYsS0FBS0csSUFBN0I7QUFDSCxTQUhEO0FBSUgsS0FMbUIsQ0FEeEIsRUFPS04sTUFQTCxDQU9ZLGVBUFosRUFPNkIsQ0FBQyxXQUFELEVBQWMsVUFBVUMsU0FBVixFQUFxQjtBQUN4RCxlQUFPLFVBQVVDLEtBQVYsRUFBaUI7QUFDcEIsbUJBQU9ELFVBQVVHLFVBQVYsQ0FBcUJGLEtBQXJCLEVBQTRCRyxLQUFuQztBQUNILFNBRkQ7QUFHSCxLQUp3QixDQVA3QixFQVlLTCxNQVpMLENBWVksY0FaWixFQVk0QixDQUFDLFdBQUQsRUFBYyxVQUFVQyxTQUFWLEVBQXFCO0FBQ3ZELGVBQU8sVUFBVUMsS0FBVixFQUFpQjtBQUNwQixtQkFBT0QsVUFBVUcsVUFBVixDQUFxQkYsS0FBckIsRUFBNEJJLElBQW5DO0FBQ0gsU0FGRDtBQUdILEtBSnVCLENBWjVCO0FBaUJILENBcEJBLEVBb0JDVCxNQXBCRCxFQW9CU0EsT0FBT0MsT0FwQmhCLENBQUQiLCJmaWxlIjoiNTUwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uICh3aW5kb3csIGFuZ3VsYXIpIHtcclxuICAgICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgICBhbmd1bGFyLm1vZHVsZSgndWkucGFydGljdWxhci5kdXJhdGlvbicsIFtdKVxyXG4gICAgICAgIC5maWx0ZXIoJ2R1cmF0aW9uJywgWydmb3JtYXR0ZXInLCBmdW5jdGlvbiAoZm9ybWF0dGVyKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoaW5wdXQpIHtcclxuICAgICAgICAgICAgICAgIHZhciB0aW1lID0gZm9ybWF0dGVyLmZvcm1hdFRpbWUoaW5wdXQpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGAke3RpbWUudmFsdWV9ICR7dGltZS51bml0fWA7XHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgfV0pXHJcbiAgICAgICAgLmZpbHRlcignZHVyYXRpb25WYWx1ZScsIFsnZm9ybWF0dGVyJywgZnVuY3Rpb24gKGZvcm1hdHRlcikge1xyXG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGlucHV0KSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZm9ybWF0dGVyLmZvcm1hdFRpbWUoaW5wdXQpLnZhbHVlO1xyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgIH1dKVxyXG4gICAgICAgIC5maWx0ZXIoJ2R1cmF0aW9uVW5pdCcsIFsnZm9ybWF0dGVyJywgZnVuY3Rpb24gKGZvcm1hdHRlcikge1xyXG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGlucHV0KSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZm9ybWF0dGVyLmZvcm1hdFRpbWUoaW5wdXQpLnVuaXQ7XHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgfV0pO1xyXG59KHdpbmRvdywgd2luZG93LmFuZ3VsYXIpKTtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL2RpcmVjdGl2ZXMvdWkucGFydGljdWxhci5kdXJhdGlvbi5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///550\n");

/***/ }),

/***/ 551:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function (window, angular, d3) {\n    'use strict';\n\n    function drawDataSeries(chart, data, color, fillColor, scaleX, scaleY) {\n\n        var area = d3.area().x(function (d, i) {\n            return scaleX(i);\n        }).y(function (d) {\n            return scaleY(d);\n        }).y1(function () {\n            return scaleY(0);\n        }).curve(d3.curveLinear);\n\n        var line = d3.line().x(function (d, i) {\n            return scaleX(i);\n        }).y(function (d, i) {\n            return scaleY(d);\n        }).curve(d3.curveLinear);\n\n        var group = chart.append('g').attr('class', 'dataSeries');\n\n        group.append('path').datum(data.points).attr('d', area).attr('fill', fillColor).attr('opacity', 0.8).attr('stroke', fillColor);\n\n        group.append('path').datum(data.points).attr('d', line).attr('stroke', color).attr('stroke-width', 2.75).attr('fill', 'none');\n    }\n\n    function drawAverageLine(chart, data, color, fillColor, scaleX, scaleY) {\n\n        var line = d3.line().x(function (d, i) {\n            return scaleX(i);\n        }).y(function (d, i) {\n            return scaleY(d);\n        }).curve(d3.curveLinear);\n\n        var group = chart.append('g').attr('class', 'dataAverage');\n\n        group.append('path').datum(Array(data.points.length).fill(data.average)).attr('d', line).attr('stroke', color).attr('stroke-width', 1.5).attr('opacity', 0.5).attr('stroke-dasharray', '10,10');\n    }\n\n    function padToWholeValue(value) {\n        var emptyDataSetyAxisMax = 10;\n\n        if (!value) {\n            return emptyDataSetyAxisMax;\n        }\n\n        var upperBound = 10;\n\n        while (value > upperBound) {\n            upperBound *= 10;\n        }\n\n        upperBound /= 10;\n\n        return Math.floor(value / upperBound) * upperBound + upperBound;\n    }\n\n    angular.module('ui.particular.largeGraph', []).directive('largeGraph', function (formatter) {\n        return {\n            restrict: 'E',\n            scope: {\n                firstDataSeries: '=firstDataSeries',\n                secondDataSeries: '=secondDataSeries',\n                isDurationGraph: '=isDurationGraph',\n                minimumYaxis: '@',\n                width: '=plotWidth',\n                height: '=plotHeight'\n            },\n            template: '<svg></svg>',\n            link: function link(scope, element, attrs) {\n                scope.$watch('firstDataSeries', function () {\n\n                    var svg = element.find('svg')[0];\n\n                    d3.select(svg).selectAll('*').remove();\n\n                    var topMargin = 10;\n                    var bottomMargin = 5;\n                    var leftMargin = 60;\n\n                    var chart = d3.select(svg).attr('width', scope.width).attr('height', scope.height);\n\n                    var width = svg.clientWidth;\n                    var height = svg.clientHeight;\n\n                    //HINT: This is workaround for Firefox\n                    if (width === 0) {\n                        var box = svg.getBoundingClientRect();\n\n                        width = box.right - box.left;\n                        height = box.bottom - box.top;\n                    }\n\n                    var firstSeries = scope.firstDataSeries;\n                    var secondSeries = scope.secondDataSeries;\n\n                    var amountOfValues = Math.max(firstSeries.points.length, secondSeries ? secondSeries.points.length : 0) || 10;\n                    if (firstSeries.points.length === 0) {\n                        firstSeries.points = new Array(amountOfValues).fill(0);\n                    }\n                    var scaleX = d3.scaleLinear().domain([0, amountOfValues - 1]).range([leftMargin, width]);\n\n                    chart.append('rect').attr('width', width - leftMargin).attr('height', height - topMargin - bottomMargin).attr('transform', 'translate(' + leftMargin + ',' + topMargin + ')').attr('fill', '#F2F6F7');\n\n                    var minimumYaxis = !isNaN(scope.minimumYaxis) ? Number(scope.minimumYaxis) : 10;\n                    var max = Math.max(firstSeries.average, firstSeries.points.length > 0 ? d3.max(firstSeries.points) : 0, minimumYaxis);\n\n                    if (secondSeries && secondSeries.points.length > 0) {\n                        max = Math.max(max, secondSeries.average, d3.max(secondSeries.points));\n                    }\n\n                    max = padToWholeValue(max);\n\n                    var scaleY = d3.scaleLinear().domain([0, max]).range([height - bottomMargin, topMargin]);\n\n                    var yAxis = d3.axisLeft(scaleY).tickValues([0, max * 1 / 4, max * 1 / 2, max * 3 / 4, max]);\n\n                    if (scope.isDurationGraph) {\n                        yAxis = yAxis.tickFormat(function (v) {\n                            var formattedTime = formatter.formatTime(v);\n\n                            return formattedTime.value + '  ' + formattedTime.unit;\n                        });\n                    }\n\n                    chart.append('g').attr('class', 'y axis').attr('transform', 'translate(' + leftMargin + ', 0)').call(function (g) {\n                        g.call(yAxis);\n                        g.select('.domain').remove();\n                        g.selectAll('.tick line').attr('stroke', 'black').attr('stroke-width', '1.75').attr('opacity', 0.1).attr('x', 0).attr('x2', width - leftMargin);\n                        g.selectAll('.tick text').attr('x', -4).attr('fill', '#828282');\n                    });\n\n                    var drawSeries = function drawSeries(data, lineColor, fillColor) {\n                        drawDataSeries(chart, data, lineColor, fillColor, scaleX, scaleY);\n                    };\n\n                    var drawAverage = function drawAverage(data, lineColor, fillColor) {\n                        drawAverageLine(chart, data, lineColor, fillColor, scaleX, scaleY);\n                    };\n\n                    drawSeries(firstSeries, attrs.firstSeriesColor, attrs.firstSeriesFillColor);\n\n                    if (secondSeries) {\n                        drawSeries(secondSeries, attrs.secondSeriesColor, attrs.secondSeriesFillColor);\n                    }\n\n                    drawAverage(firstSeries, attrs.firstSeriesColor, attrs.firstSeriesFillColor);\n\n                    if (secondSeries) {\n                        drawAverage(secondSeries, attrs.secondSeriesColor, attrs.secondSeriesFillColor);\n                    }\n                });\n            }\n        };\n    });\n})(window, window.angular, window.d3);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///551\n");

/***/ }),

/***/ 552:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function (window, angular, $) {\n    'use strict';\n\n    angular.module('ui.particular.messageTypesChangeIndicator', []).directive('messageTypesChangeIndicator', function () {\n        return {\n            restrict: 'E',\n            scope: {\n                refresh: '=',\n                messageTypesAvailable: '='\n            },\n            templateUrl: 'modules/monitoring/js/directives/ui.particular.messageTypesChangeIndicator.tpl.html',\n            link: function link(scope, element, attrs) {\n                $(window).on('load scroll', function () {\n                    if ($(this).scrollTop() > 510) {\n                        $('.endpoint-data-changed').addClass('sticky');\n                        $('.table-head-row').addClass('add-top-margin');\n                    } else {\n                        $('.endpoint-data-changed').removeClass('sticky');\n                        $('.table-head-row').removeClass('add-top-margin');\n                    }\n                });\n            }\n        };\n    });\n})(window, window.angular, window.jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL2RpcmVjdGl2ZXMvdWkucGFydGljdWxhci5tZXNzYWdlVHlwZXNDaGFuZ2VJbmRpY2F0b3IuanM/NjE3ZSJdLCJuYW1lcyI6WyJ3aW5kb3ciLCJhbmd1bGFyIiwiJCIsIm1vZHVsZSIsImRpcmVjdGl2ZSIsInJlc3RyaWN0Iiwic2NvcGUiLCJyZWZyZXNoIiwibWVzc2FnZVR5cGVzQXZhaWxhYmxlIiwidGVtcGxhdGVVcmwiLCJsaW5rIiwiZWxlbWVudCIsImF0dHJzIiwib24iLCJzY3JvbGxUb3AiLCJhZGRDbGFzcyIsInJlbW92ZUNsYXNzIiwialF1ZXJ5Il0sIm1hcHBpbmdzIjoiOztBQUFDLFdBQVVBLE1BQVYsRUFBa0JDLE9BQWxCLEVBQTJCQyxDQUEzQixFQUE4QjtBQUMzQjs7QUFFQUQsWUFBUUUsTUFBUixDQUFlLDJDQUFmLEVBQTRELEVBQTVELEVBQ0tDLFNBREwsQ0FDZSw2QkFEZixFQUVRLFlBQVc7QUFDUCxlQUFPO0FBQ0hDLHNCQUFVLEdBRFA7QUFFSEMsbUJBQU87QUFDSEMseUJBQVMsR0FETjtBQUVIQyx1Q0FBdUI7QUFGcEIsYUFGSjtBQU1IQyx5QkFBYSxxRkFOVjtBQU9IQyxrQkFBTSxTQUFTQSxJQUFULENBQWNKLEtBQWQsRUFBcUJLLE9BQXJCLEVBQThCQyxLQUE5QixFQUFxQztBQUN2Q1Ysa0JBQUVGLE1BQUYsRUFBVWEsRUFBVixDQUFhLGFBQWIsRUFBNEIsWUFBWTtBQUNwQyx3QkFBSVgsRUFBRSxJQUFGLEVBQVFZLFNBQVIsS0FBc0IsR0FBMUIsRUFBK0I7QUFDM0JaLDBCQUFFLHdCQUFGLEVBQTRCYSxRQUE1QixDQUFxQyxRQUFyQztBQUNBYiwwQkFBRSxpQkFBRixFQUFxQmEsUUFBckIsQ0FBOEIsZ0JBQTlCO0FBQ0gscUJBSEQsTUFHTztBQUNIYiwwQkFBRSx3QkFBRixFQUE0QmMsV0FBNUIsQ0FBd0MsUUFBeEM7QUFDQWQsMEJBQUUsaUJBQUYsRUFBcUJjLFdBQXJCLENBQWlDLGdCQUFqQztBQUNIO0FBQ0osaUJBUkQ7QUFTSDtBQWpCRSxTQUFQO0FBbUJILEtBdEJUO0FBdUJILENBMUJBLEVBMEJDaEIsTUExQkQsRUEwQlNBLE9BQU9DLE9BMUJoQixFQTBCeUJELE9BQU9pQixNQTFCaEMsQ0FBRCIsImZpbGUiOiI1NTIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gKHdpbmRvdywgYW5ndWxhciwgJCkge1xyXG4gICAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICAgIGFuZ3VsYXIubW9kdWxlKCd1aS5wYXJ0aWN1bGFyLm1lc3NhZ2VUeXBlc0NoYW5nZUluZGljYXRvcicsIFtdKVxyXG4gICAgICAgIC5kaXJlY3RpdmUoJ21lc3NhZ2VUeXBlc0NoYW5nZUluZGljYXRvcicsXHJcbiAgICAgICAgICAgIGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgICAgICAgICByZXN0cmljdDogJ0UnLFxyXG4gICAgICAgICAgICAgICAgICAgIHNjb3BlOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlZnJlc2g6ICc9JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZVR5cGVzQXZhaWxhYmxlOiAnPSdcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnbW9kdWxlcy9tb25pdG9yaW5nL2pzL2RpcmVjdGl2ZXMvdWkucGFydGljdWxhci5tZXNzYWdlVHlwZXNDaGFuZ2VJbmRpY2F0b3IudHBsLmh0bWwnLFxyXG4gICAgICAgICAgICAgICAgICAgIGxpbms6IGZ1bmN0aW9uIGxpbmsoc2NvcGUsIGVsZW1lbnQsIGF0dHJzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQod2luZG93KS5vbignbG9hZCBzY3JvbGwnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJCh0aGlzKS5zY3JvbGxUb3AoKSA+IDUxMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoJy5lbmRwb2ludC1kYXRhLWNoYW5nZWQnKS5hZGRDbGFzcygnc3RpY2t5Jyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJCgnLnRhYmxlLWhlYWQtcm93JykuYWRkQ2xhc3MoJ2FkZC10b3AtbWFyZ2luJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoJy5lbmRwb2ludC1kYXRhLWNoYW5nZWQnKS5yZW1vdmVDbGFzcygnc3RpY2t5Jyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJCgnLnRhYmxlLWhlYWQtcm93JykucmVtb3ZlQ2xhc3MoJ2FkZC10b3AtbWFyZ2luJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIH0pO1xyXG59KHdpbmRvdywgd2luZG93LmFuZ3VsYXIsIHdpbmRvdy5qUXVlcnkpKTtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9hcHAvbW9kdWxlcy9tb25pdG9yaW5nL2pzL2RpcmVjdGl2ZXMvdWkucGFydGljdWxhci5tZXNzYWdlVHlwZXNDaGFuZ2VJbmRpY2F0b3IuanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///552\n");

/***/ })

/******/ });